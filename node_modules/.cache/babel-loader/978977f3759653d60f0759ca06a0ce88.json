{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Modals/action.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport { useDispatch } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Stack from \"@mui/material/Stack\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport moment from \"moment\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport { ADD_ACTION_TO_Projection } from \"../../redux/projections/projection.types\";\nimport Input from \"@mui/material/Input\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 500,\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4\n};\nexport default function Action1(_ref) {\n  _s();\n\n  let {\n    open,\n    handleClose,\n    projection,\n    action\n  } = _ref;\n  const rx_live = /^\\d+(?:[.,]{1}\\d*)?$/;\n  const dispatch = useDispatch();\n  const [date, setDate] = React.useState(moment(projection.startDate));\n  const [minDate, setMinDate] = React.useState(moment(projection.startDate));\n  const [assetIndex, setAssetIndex] = React.useState(-1);\n  const [selectedAsset, setSelectedAsset] = React.useState(null);\n  const [newPrice, setNewPrice] = React.useState(null);\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showErr, setShowErr] = React.useState(false);\n\n  const isDateValid = function () {\n    let d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    d = d ? d.toDate().getTime() : date.toDate().getTime();\n    return d >= minDate.toDate().getTime() && d <= moment(projection.endDate).toDate().getTime();\n  };\n\n  const handleDateChange = newValue => {\n    if (isDateValid(newValue)) {\n      setDate(newValue);\n      setShowErr(false);\n    } else {\n      setErreur(`Date must be in ${minDate.format('DD-MM-YYYY')} & ${moment(projection.endDate).format('DD-MM-YYYY')}`);\n      setShowErr(true);\n    }\n  };\n\n  const findLastActionByCoin = coin => {\n    console.log(projection);\n    const arr = projection.actions.filter(act => {\n      return act.coin.name === coin.name;\n    });\n    console.log(arr);\n    return arr.length > 0 ? moment(arr[arr.length - 1].date).add(1, 'days') : moment(projection.startDate).subtract(1, 'days');\n  };\n\n  const handleChange = event => {\n    const index = event.target.value;\n    setAssetIndex(index);\n    setSelectedAsset(projection.coins[index]);\n    setNewPrice(projection.coins[index].currentPrice);\n    setMinDate(findLastActionByCoin(projection.coins[index]));\n    setDate(findLastActionByCoin(projection.coins[index]));\n  };\n\n  const handleNepChange = event => {\n    let val = event.target.value;\n    val = val.replace(',', '.');\n    if (rx_live.test(val)) setNewPrice(val);\n  };\n\n  const handleAddAction = () => {\n    if (rx_live.test(newPrice) && isDateValid()) {\n      const newaction = {\n        id: (Math.random() + 1).toString(36).substring(7),\n        coin: selectedAsset,\n        date,\n        type: action.name,\n        price: newPrice\n      };\n      dispatch({\n        type: ADD_ACTION_TO_Projection,\n        payload: {\n          projection,\n          action: newaction\n        }\n      });\n      handleClose();\n      setShowErr(false);\n    } else {\n      setErreur(`Please check your information :\n        -Date must be in ${minDate.format('DD-MM-YYYY')} & ${moment(projection.endDate).format('DD-MM-YYYY')}!\n        -Price must be a number!\n      `);\n      setShowErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        className: styles[\"modal\"],\n        children: [showErr ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"error\"],\n          children: erreur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 22\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: [\"Configure your Action:\", action.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: DateAdapter,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: [\" \", /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"Start Date\",\n              inputFormat: \"DD-MM-YYYY\",\n              value: date,\n              disabled: selectedAsset === null,\n              onChange: handleDateChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Assets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              label: \"Assets\",\n              value: assetIndex,\n              onChange: handleChange,\n              children: projection.coins.map((coin, index) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: index,\n                  children: coin.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), selectedAsset ? /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"component-helper\",\n              children: [\"Current price \", selectedAsset.currentPrice, \"$ \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Current price\",\n              value: newPrice,\n              onChange: handleNepChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"modal-footer\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAddAction,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Action1, \"J4+OKtto/sZMbBhVXXZT+IfPEHM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Action1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Action1\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Modals/action.js"],"names":["React","Box","Button","Typography","Modal","styles","TextField","useDispatch","InputLabel","Stack","DateAdapter","LocalizationProvider","moment","DesktopDatePicker","ADD_ACTION_TO_Projection","Input","MenuItem","FormControl","Select","style","position","top","left","transform","width","height","overflowY","bgcolor","p","Action1","open","handleClose","projection","action","rx_live","dispatch","date","setDate","useState","startDate","minDate","setMinDate","assetIndex","setAssetIndex","selectedAsset","setSelectedAsset","newPrice","setNewPrice","erreur","setErreur","showErr","setShowErr","isDateValid","d","toDate","getTime","endDate","handleDateChange","newValue","format","findLastActionByCoin","coin","console","log","arr","actions","filter","act","name","length","add","subtract","handleChange","event","index","target","value","coins","currentPrice","handleNepChange","val","replace","test","handleAddAction","newaction","id","Math","random","toString","substring","type","price","payload","mt","params","map"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport { useDispatch } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Stack from \"@mui/material/Stack\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport moment from \"moment\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport {\n  ADD_ACTION_TO_Projection\n} from \"../../redux/projections/projection.types\";\nimport Input from \"@mui/material/Input\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 500,\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4,\n};\n\nexport default function Action1({\n  open,\n  handleClose,\n  projection,\n  action\n}) {\n  \n  const rx_live = /^\\d+(?:[.,]{1}\\d*)?$/;\n  const dispatch = useDispatch();\n  const [date, setDate] = React.useState(moment(projection.startDate));\n  const [minDate, setMinDate] = React.useState(moment(projection.startDate));\n  const [assetIndex, setAssetIndex] = React.useState(-1);\n  const [selectedAsset, setSelectedAsset] = React.useState(null);\n  const [newPrice, setNewPrice] = React.useState(null);\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showErr, setShowErr] = React.useState(false);\n\n  const isDateValid = (d=null ) => {\n    d = d ? d.toDate().getTime() : date.toDate().getTime();\n    return d >= minDate.toDate().getTime() && d <= moment(projection.endDate).toDate().getTime()\n  }\n\n  const handleDateChange = (newValue) => {\n    if(isDateValid(newValue)){\n      setDate(newValue);\n      setShowErr(false)\n    }else{\n      setErreur(`Date must be in ${minDate.format('DD-MM-YYYY')} & ${moment(projection.endDate).format('DD-MM-YYYY')}`)\n      setShowErr(true)\n    }\n  };\n  \n  const findLastActionByCoin = (coin) => {\n    console.log(projection)\n    const arr =  projection.actions.filter(act=>{\n      return act.coin.name === coin.name;\n    })\n    console.log(arr)\n    return arr.length>0 ? moment(arr[arr.length-1].date).add(1, 'days') :moment(projection.startDate).subtract(1, 'days')\n  }\n  const handleChange = (event) => {\n    const index = event.target.value;\n    setAssetIndex(index)\n    setSelectedAsset(projection.coins[index]);\n    setNewPrice(projection.coins[index].currentPrice)\n    setMinDate(findLastActionByCoin(projection.coins[index]))\n    setDate(findLastActionByCoin(projection.coins[index]))\n  }\n  const handleNepChange = (event) =>{\n    let val=event.target.value;\n    val=val.replace(',','.')\n    if (rx_live.test(val))\n      setNewPrice(val)\n\n  }\n\n  const handleAddAction = () => {\n    if (rx_live.test(newPrice) &&  isDateValid()){\n      const newaction = {\n        id:(Math.random() + 1).toString(36).substring(7),\n        coin:selectedAsset,\n        date,\n        type:action.name,\n        price:newPrice\n      }\n      dispatch({ type: ADD_ACTION_TO_Projection, payload: {projection,action:newaction} });\n      handleClose()\n      setShowErr(false)\n    }else{\n      setErreur(`Please check your information :\n        -Date must be in ${minDate.format('DD-MM-YYYY')} & ${moment(projection.endDate).format('DD-MM-YYYY')}!\n        -Price must be a number!\n      `)\n      setShowErr(true)\n    }\n  }\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style} className={styles[\"modal\"]}>\n          {showErr ? <p className={styles[\"error\"]}>{erreur}</p> : \"\"}\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Configure your Action:{action.name}\n          </Typography>\n\n          <LocalizationProvider dateAdapter={DateAdapter}>\n            <Stack spacing={3}>\n              {\" \"}\n              <DesktopDatePicker\n                label=\"Start Date\"\n                inputFormat=\"DD-MM-YYYY\"\n                value={date}\n                disabled={selectedAsset===null}\n                onChange={handleDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              </Stack>\n            </LocalizationProvider>\n            <Stack>\n                <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">Assets</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label=\"Assets\"\n                    value={assetIndex}\n                    onChange={handleChange}\n                  >\n                    {\n                      projection.coins.map((coin,index)=>{\n                        return <MenuItem key={index} value={index}>{coin.name}</MenuItem>\n                      })\n                      }\n                  </Select>\n                </FormControl>\n                {\n                  selectedAsset ? (\n                    <FormControl fullWidth>\n                      <InputLabel htmlFor=\"component-helper\">Current price {selectedAsset.currentPrice}$ </InputLabel>\n\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Current price\"\n                        value={newPrice}\n                        onChange={handleNepChange}\n                      />\n                    </FormControl>\n                  )\n                  :''\n                }\n            </Stack>\n\n          <div className={styles[\"modal-footer\"]}>\n            <Button variant=\"contained\" onClick={handleAddAction} >\n              Save Changes\n            </Button>\n            <Button variant=\"outlined\" onClick={handleClose}>\n              Close\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}