{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/NavBar/navBar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar(_ref) {\n  _s();\n\n  let {\n    routers\n  } = _ref;\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [selectedIndex, setSelectdIndex] = React.useState(0);\n  const title = \"Projection.finance\";\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleSelectdIndexChange = index => {\n    setSelectdIndex(index);\n    handleCloseNavMenu();\n  };\n\n  React.useEffect(() => {\n    routers.forEach((route, index) => {\n      if (route.path === window.location.pathname) {\n        setSelectdIndex(index);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: \"none\",\n              md: \"flex\"\n            }\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: \"flex\",\n              md: \"none\"\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-label\": \"account of current user\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleOpenNavMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"left\"\n            },\n            open: Boolean(anchorElNav),\n            onClose: handleCloseNavMenu,\n            sx: {\n              display: {\n                xs: \"block\",\n                md: \"none\"\n              }\n            },\n            children: [routers.map((page, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: e => handleSelectdIndexChange(index),\n              style: {\n                backgroundColor: index === selectedIndex ? \"rgba(33, 37, 41, 0.4)\" : \"\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: page.path,\n                style: {\n                  textDecoration: \"none\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: \"black\"\n                  },\n                  textAlign: \"center\",\n                  children: page.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(MenuItem, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: \"black\"\n                },\n                textAlign: \"center\",\n                children: \"Connect to web 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: \"flex\",\n              md: \"none\"\n            }\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: \"none\",\n              md: \"flex\"\n            }\n          },\n          children: [routers.map((page, index) => /*#__PURE__*/_jsxDEV(Link, {\n            onClick: e => handleSelectdIndexChange(index),\n            to: page.path,\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => handleSelectdIndexChange(index),\n              sx: {\n                my: 2,\n                ml: 10,\n                color: \"white\",\n                display: \"block\",\n                backgroundColor: index === selectedIndex ? \"rgba(33, 37, 41, 0.4)\" : \"\"\n              },\n              children: page.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              my: 2,\n              ml: \"auto\",\n              color: \"white\",\n              display: \"block\",\n              border: \"1px solid white\"\n            },\n            children: \"Connect to web 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBar, \"0LTDZzPwZeryyLXclLe5SLxJhcE=\");\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/NavBar/navBar.js"],"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Button","MenuItem","Link","NavBar","routers","anchorElNav","setAnchorElNav","useState","selectedIndex","setSelectdIndex","title","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","handleSelectdIndexChange","index","useEffect","forEach","route","path","window","location","pathname","mr","display","xs","md","flexGrow","vertical","horizontal","Boolean","map","page","e","backgroundColor","textDecoration","color","name","my","ml","border"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NavBar({ routers }) {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [selectedIndex, setSelectdIndex] = React.useState(0);\n  const title = \"Projection.finance\";\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleSelectdIndexChange = (index) => {\n    setSelectdIndex(index);\n    handleCloseNavMenu();\n  };\n\n  React.useEffect(() => {\n    routers.forEach((route, index) => {\n      if (route.path === window.location.pathname) {\n        setSelectdIndex(index);\n      }\n    });\n  }, []);\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n          >\n            {title}\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              {routers.map((page, index) => (\n                <MenuItem\n                  key={index}\n                  onClick={(e) => handleSelectdIndexChange(index)}\n                  style={{\n                    backgroundColor:\n                      index === selectedIndex ? \"rgba(33, 37, 41, 0.4)\" : \"\",\n                  }}\n                >\n                  <Link\n                    to={page.path}\n                    style={{\n                      textDecoration: \"none\",\n                    }}\n                  >\n                    <Typography\n                      sx={{\n                        color: \"black\",\n                      }}\n                      textAlign=\"center\"\n                    >\n                      {page.name}\n                    </Typography>\n                  </Link>\n                </MenuItem>\n              ))}\n              <MenuItem>\n                <Typography\n                  sx={{\n                    color: \"black\",\n                  }}\n                  textAlign=\"center\"\n                >\n                  Connect to web 3\n                </Typography>\n              </MenuItem>\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n          >\n            {title}\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {routers.map((page, index) => (\n              <Link\n                key={index}\n                onClick={(e) => handleSelectdIndexChange(index)}\n                to={page.path}\n                style={{\n                  textDecoration: \"none\",\n                }}\n              >\n                <Button\n                  onClick={(e) => handleSelectdIndexChange(index)}\n                  sx={{\n                    my: 2,\n                    ml: 10,\n                    color: \"white\",\n                    display: \"block\",\n                    backgroundColor:\n                      index === selectedIndex ? \"rgba(33, 37, 41, 0.4)\" : \"\",\n                  }}\n                >\n                  {page.name}\n                </Button>\n              </Link>\n            ))}\n\n            <Button\n              sx={{\n                my: 2,\n                ml: \"auto\",\n                color: \"white\",\n                display: \"block\",\n                border: \"1px solid white\",\n              }}\n            >\n              Connect to web 3\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}