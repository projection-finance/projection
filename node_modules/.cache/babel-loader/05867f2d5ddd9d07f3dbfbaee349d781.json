{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/projection/projection.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport Stack from \"@mui/material/Stack\";\nimport Add_Edit_PorjectModal from \"../Modals/add_Edit_Project\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport MyChart from \"../Chart/myChart\";\nimport styles from \"./projection.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"initial\",\n    border: 0,\n    boxShadow: \"none\",\n    textDecoration: \"underline\",\n    color: \"#0D6EFD\",\n    cursor: \"pointer\"\n  };\n});\n_c = Item;\nconst ItemSlash = styled(Paper)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"initial\",\n    border: 0,\n    boxShadow: \"none\",\n    textDecoration: \"none\",\n    color: \"#6C757D\"\n  };\n});\n_c2 = ItemSlash;\nexport default function Projection() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [who, setWho] = React.useState(0);\n  const {\n    projections\n  } = useSelector(state => state.projection);\n  const [projectionName, setProjctionName] = React.useState(\"\");\n  const [projectEdit, setProjctionEdit] = React.useState(null);\n  const [projection, setProjction] = React.useState(null);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  let {\n    projectionId\n  } = useParams();\n  React.useEffect(() => {\n    if (projectionId) {\n      const [firstItem] = projections.filter(prj => prj.id == projectionId);\n      if (firstItem) setProjctionEdit(firstItem);\n    }\n\n    if (!projectEdit) {\n      const date = new Date();\n      setProjctionName(`projection_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`);\n    }\n\n    if (who === 0) handleOpen();\n  }, []);\n\n  const afterSave = projectionAdded => {\n    setProjction(projectionAdded);\n    setWho(who + 1);\n  };\n\n  const elements = [/*#__PURE__*/_jsxDEV(Add_Edit_PorjectModal, {\n    afterSave: afterSave,\n    projectionName: projectionName,\n    projectEdit: projectEdit,\n    open: open,\n    handleClose: handleClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(MyChart, {\n    projection: projection\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this)];\n  const paths = [\"Projection\", \"Portfolio\", \"Actions\"];\n  const active = {\n    textDecoration: 'none',\n    color: '#6C757D ',\n    cursor: 'default'\n  };\n\n  const goNext = index => {\n    //TODO validate if current is valide\n    if (index != 0 && !projection) handleOpen();else setWho(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"container\"],\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: paths.map((elem, index) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: index === who ? active : {},\n            onClick: e => goNext(index),\n            children: elem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), index != paths.length - 1 ? /*#__PURE__*/_jsxDEV(ItemSlash, {\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 46\n          }, this) : '']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), elements.map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: who === index ? elem : ''\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projection, \"0SGgwbnD3RvlCVpgtoN0l8wT/jg=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c3 = Projection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ItemSlash\");\n$RefreshReg$(_c3, \"Projection\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/projection/projection.js"],"names":["React","Paper","styled","Stack","Add_Edit_PorjectModal","useParams","useSelector","MyChart","styles","Item","theme","padding","spacing","textAlign","backgroundColor","border","boxShadow","textDecoration","color","cursor","ItemSlash","Projection","open","setOpen","useState","who","setWho","projections","state","projection","projectionName","setProjctionName","projectEdit","setProjctionEdit","setProjction","handleOpen","handleClose","projectionId","useEffect","firstItem","filter","prj","id","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","afterSave","projectionAdded","elements","paths","active","goNext","index","map","elem","e","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport Stack from \"@mui/material/Stack\";\nimport Add_Edit_PorjectModal from \"../Modals/add_Edit_Project\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport MyChart from \"../Chart/myChart\";\nimport styles from \"./projection.module.css\"\n\nconst Item = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  backgroundColor: \"initial\",\n  border: 0,\n  boxShadow: \"none\",\n  textDecoration: \"underline\",\n  color: \"#0D6EFD\",\n  cursor: \"pointer\",\n}));\n\nconst ItemSlash = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  backgroundColor: \"initial\",\n  border: 0,\n  boxShadow: \"none\",\n  textDecoration: \"none\",\n  color: \"#6C757D\",\n}));\n\nexport default function Projection() {\n  const [open, setOpen] = React.useState(false);\n  const [who, setWho] = React.useState(0);\n  const { projections } = useSelector((state) => state.projection);\n  const [projectionName, setProjctionName] = React.useState(\"\");\n  const [projectEdit, setProjctionEdit] = React.useState(null);\n  const [projection, setProjction] = React.useState(null);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  let { projectionId } = useParams();\n  React.useEffect(() => {\n    if (projectionId) {\n      const [firstItem] = projections.filter((prj) => prj.id == projectionId);\n      if (firstItem) setProjctionEdit(firstItem);\n    }\n    if (!projectEdit) {\n      const date = new Date();\n      setProjctionName(\n        `projection_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`\n      );\n    }\n    if(who===0)\n      handleOpen();\n  }, []);\n\n  const afterSave = (projectionAdded)=>{\n    setProjction(projectionAdded)\n    setWho(who+1)\n  }\n\n  const elements=[\n    <Add_Edit_PorjectModal\n    afterSave={afterSave}\n    projectionName={projectionName}\n    projectEdit={projectEdit}\n    open={open}\n    handleClose={handleClose}\n  />,\n  \n  <MyChart projection={projection} />\n  ]\n\n  const paths=[\n    \"Projection\",\n    \"Portfolio\",\n    \"Actions\",\n  ]\n  const active={\n    textDecoration: 'none',\n    color:'#6C757D ',\n    cursor: 'default' \n}\n\nconst goNext = (index)=>{\n  //TODO validate if current is valide\n  if(index != 0 && !projection)\n    handleOpen()\n  else\n    setWho(index);\n}\n  return (\n    <div className={styles[\"container\"]}>\n      <Stack direction=\"row\">\n        {\n          paths.map((elem,index)=>{\n           return  (\n              <React.Fragment key={index}>\n                  <Item sx={index===who ? active : {}} onClick={(e)=>goNext(index)}>{elem}</Item>\n                  {index != paths.length-1 ? <ItemSlash>/</ItemSlash> :''}\n              </React.Fragment>\n\n            )\n          })\n        }\n      </Stack>\n      {\n        elements.map((elem,index)=>{\n          return (\n            <>\n              {\n                who===index ? elem : ''\n              }\n            </>\n          )\n        })\n      }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}