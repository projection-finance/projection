{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Home/home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AddPorjectModal from \"../Modals/addProject\";\nimport styles from \"./home.module.css\";\nimport Button from \"@mui/material/Button\";\nimport ProjctionTable from \"../projection/projectionTable\";\nimport { useSelector } from \"react-redux\";\nimport ListActions from \"../projection/listActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    projections\n  } = useSelector(state => state.projection);\n  const [open, setOpen] = React.useState(false);\n  const [projection, setProjction] = React.useState(\"\");\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const handleClick = () => {\n    if (projections.length === 0) {\n      const date = new Date();\n      setProjction(`projection_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`);\n    }\n\n    handleOpen();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"container\"],\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleClick,\n      className: styles[\"btnCenter\"],\n      children: [projections.length === 0 ? \"New\" : \"Edit\", \" Project\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddPorjectModal, {\n      projectionName: projection,\n      projectView: projections,\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjctionTable, {\n      projections: projections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListActions, {\n      projections: projections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"se4BXWdPohu0s9sSznEYz9jWYLw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Home/home.js"],"names":["React","AddPorjectModal","styles","Button","ProjctionTable","useSelector","ListActions","Home","projections","state","projection","open","setOpen","useState","setProjction","handleOpen","handleClose","handleClick","length","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAkBH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAAnC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACH,UAAD,EAAaI,YAAb,IAA6Bd,KAAK,CAACa,QAAN,CAAe,EAAf,CAAnC;;AACA,QAAME,UAAU,GAAG,MAAMH,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMI,WAAW,GAAG,MAAMJ,OAAO,CAAC,KAAD,CAAjC;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACxB,QAAGT,WAAW,CAACU,MAAZ,KAAsB,CAAzB,EAA4B;AAC1B,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAN,MAAAA,YAAY,CACT,cAAaK,IAAI,CAACE,OAAL,EAAe,IAAGF,IAAI,CAACG,QAAL,EAAgB,IAAGH,IAAI,CAACI,WAAL,EAAmB,IAAGJ,IAAI,CAACK,QAAL,EAAgB,IAAGL,IAAI,CAACM,UAAL,EAAkB,EADpG,CAAZ;AAID;;AACDV,IAAAA,UAAU;AACX,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAAC,WAAD,CAAtB;AAAA,4BACI,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAEe,WAFX;AAGE,MAAA,SAAS,EAAEf,MAAM,CAAC,WAAD,CAHnB;AAAA,iBAKGM,WAAW,CAACU,MAAZ,KAAuB,CAAvB,GAA2B,KAA3B,GAAmC,MALtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQE,QAAC,eAAD;AACE,MAAA,cAAc,EAAER,UADlB;AAEE,MAAA,WAAW,EAAEF,WAFf;AAGE,MAAA,IAAI,EAAEG,IAHR;AAIE,MAAA,WAAW,EAAEK;AAJf;AAAA;AAAA;AAAA;AAAA,YARF,eAcE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAER;AAA7B;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApCuBD,I;UACEF,W;;;KADFE,I","sourcesContent":["import React from \"react\";\nimport AddPorjectModal from \"../Modals/addProject\";\nimport styles from \"./home.module.css\";\nimport Button from \"@mui/material/Button\";\nimport ProjctionTable from \"../projection/projectionTable\";\nimport { useSelector } from \"react-redux\";\nimport ListActions from \"../projection/listActions\";\nexport default function Home() {\n  const { projections } = useSelector((state) => state.projection);\n  const [open, setOpen] = React.useState(false);\n  const [projection, setProjction] = React.useState(\"\");\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const handleClick = () => {\n    if(projections.length ===0 ){\n      const date = new Date();\n      setProjction(\n        `projection_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`\n      \n      ); \n    }\n    handleOpen();\n  };\n  return (\n    <div className={styles[\"container\"]}>\n        <Button\n          variant=\"contained\"\n          onClick={handleClick}\n          className={styles[\"btnCenter\"]}\n        >\n          {projections.length === 0 ? \"New\" : \"Edit\" } Project\n        </Button>\n      <AddPorjectModal\n        projectionName={projection}\n        projectView={projections}\n        open={open}\n        handleClose={handleClose}\n      />\n      <ProjctionTable projections={projections} />\n      <ListActions projections={projections} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}