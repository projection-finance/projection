{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Chart/myChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport dragdataPlugin from \"./chartjs-plugin-dragdata\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nimport { Chart, registerables } from \"chart.js\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_EDIT_CHART_TO_Projection } from \"../../redux/projections/projection.types\";\nimport { ReactComponent as DeleteIcon } from \"./../../assets/icons/delete.svg\";\nimport { ReactComponent as AddIcon } from \"./../../assets/icons/add.svg\";\nimport { ReactComponent as NextIcon } from \"./../../assets/icons/next.svg\";\nimport { ReactComponent as PrevIcon } from \"./../../assets/icons/prev.svg\";\nimport { ReactComponent as EndIcon } from \"./../../assets/icons/end.svg\";\nimport { ReactComponent as FirstIcon } from \"./../../assets/icons/first.svg\";\nimport \"./myChart.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyChart(_ref) {\n  _s();\n\n  let {\n    projection\n  } = _ref;\n  Chart.register(...registerables, dragdataPlugin, zoomPlugin);\n  const dispatch = useDispatch();\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const [isDraggingPoint, setIsDraggingPoint] = useState();\n  const [yMax, setYMax] = useState();\n  const [error, setError] = useState(false); // Formated Date to total minute\n\n  const dateToMin = a => {\n    const formatDate = new Date(a);\n    const min = formatDate.getTime() / 60;\n    return min;\n  }; // Total minute to formatted date\n\n\n  const minToDate = min => {\n    const date = new Date(min);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return year + \"/\" + month + \"/\" + day;\n  }; // Total minute to other type of formatted date\n\n\n  const minToFormatedDate = min => {\n    const date = new Date(min);\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return day + \" \" + months[month] + \" \" + year;\n  };\n\n  const [mixedData, setMixedData] = useState(projection.chart);\n  const [selectAssets, setSelectAssets] = useState(mixedData[0]); // Set y max value\n\n  useEffect(() => {\n    let newArray = [];\n    mixedData.find(item => item.label === selectAssets.label).mainData.map((item, index) => {\n      return newArray.push(item.y);\n    });\n    const ymax = Math.max(...newArray);\n    setYMax(Math.ceil(ymax * 1.5));\n  }, [mixedData, isDraggingPoint, selectAssets.label]); // Pagination\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDate, setAddDate] = useState(null);\n  const [addPrice, setAddPrice] = useState(); // Perpage select option\n\n  const selectOption = [{\n    label: \"5\",\n    value: 5\n  }, {\n    label: \"10\",\n    value: 10\n  }, {\n    label: \"20\",\n    value: 20\n  }, {\n    label: \"All\",\n    value: \"all\"\n  }]; // Select the number of per page\n\n  const onSelectPage = e => {\n    if (e.target.value === \"all\") {\n      setRowsPerPage(mixedData.find(item => item.label === selectAssets.label).mainData.length);\n      setPage(0);\n    } else {\n      setRowsPerPage(e.target.value);\n      setPage(0);\n    }\n  };\n  /** Begin pagination button functions */\n\n\n  const onFirst = () => {\n    setPage(0);\n  };\n\n  const onLast = () => {\n    setPage(Math.floor(mixedData.find(item => item.label === selectAssets.label).mainData.length / rowsPerPage));\n  };\n\n  const onPrevious = () => {\n    if (page === 0) {\n      return;\n    }\n\n    setPage(state => state - 1);\n  };\n\n  const onNext = () => {\n    if (page >= Math.floor(mixedData.find(item => item.label === selectAssets.label).mainData.length / rowsPerPage)) {\n      return;\n    } else {\n      setPage(state => state + 1);\n    }\n  };\n  /** End pagination button functions */\n  // Adding price data in table\n\n\n  const onPrice = e => {\n    setAddPrice(parseFloat(e.target.value));\n  }; // Add one point in table\n\n\n  const onAdd = () => {\n    if (!addDate || !addPrice) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n    }\n\n    const tmpData = mixedData.map(item => {\n      if (item.label === selectAssets.label) {\n        return { ...item,\n          mainData: [...item.mainData, {\n            x: addDate / 60,\n            y: addPrice\n          }].sort((a, b) => a.x - b.x)\n        };\n      } else {\n        return item;\n      }\n    });\n    setMixedData(tmpData);\n    projection.chart = tmpData;\n    dispatch({\n      type: ADD_EDIT_CHART_TO_Projection,\n      payload: projection\n    });\n    setAddPrice(\"\");\n    setAddDate(null);\n  }; // Remove one point from table\n\n\n  const onRemove = key => {\n    const tmp = mixedData.map(items => {\n      if (items.label === selectAssets.label) {\n        console.log(\"tmpData\");\n        const tmpData = { ...items,\n          mainData: items.mainData.filter(item => item.x !== key)\n        };\n        return tmpData;\n      } else {\n        return items;\n      }\n    });\n    setMixedData(tmp);\n    projection.chart = tmp;\n    dispatch({\n      type: ADD_EDIT_CHART_TO_Projection,\n      payload: projection\n    });\n  }; // Price editing function in per row\n\n\n  const changePricePerRow = (e, id) => {\n    const tmp = mixedData.map(item => {\n      if (item.label === selectAssets.label) {\n        const mD = item.mainData.map((i, index) => {\n          if (index === id) {\n            return {\n              x: i.x,\n              y: e.target.value\n            };\n          } else {\n            return i;\n          }\n        });\n        return { ...item,\n          mainData: mD\n        };\n      } else {\n        return item;\n      }\n    });\n    setMixedData(tmp);\n    projection.chart = tmp;\n    dispatch({\n      type: ADD_EDIT_CHART_TO_Projection,\n      payload: projection\n    });\n  }; // Date editing function in per row\n\n\n  const changeDatePerRow = (newDate, id) => {\n    const tmp = mixedData.map(item => {\n      if (item.label === selectAssets.label) {\n        const mD = item.mainData.map((i, index) => {\n          if (index === id) {\n            return {\n              x: dateToMin(newDate),\n              y: i.y\n            };\n          } else {\n            return i;\n          }\n        });\n        return { ...item,\n          mainData: mD\n        };\n      } else {\n        return item;\n      }\n    });\n    setMixedData(tmp);\n    projection.chart = tmp;\n    dispatch({\n      type: ADD_EDIT_CHART_TO_Projection,\n      payload: projection\n    });\n  }; // Click functino when select coin\n\n\n  const handleSelectCoin = label => {\n    const selectedData = mixedData.find(item => item.label === label);\n    setSelectAssets(selectedData);\n  }; // Chart main optinos\n\n\n  const options = {\n    responsive: true,\n    title: {\n      display: true,\n      text: \"Chart.js Time Scale\"\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: yMax,\n        stepSize: 0.01,\n        title: {\n          text: \"Price in dollar\",\n          display: true\n        }\n      },\n      x: {\n        ticks: {\n          callback: function (value, index, ticks) {\n            return minToDate(value * 60);\n          }\n        }\n      }\n    },\n    lineTension: 0.1,\n    hover: {\n      mode: \"dataset\"\n    },\n    datasets: {\n      scatter: {\n        borderWidth: 2.5,\n        fill: false,\n        pointRadius: 5,\n        pointHitRadius: 5,\n        showLine: true\n      }\n    },\n    pointHoverRadius: 3,\n    plugins: {\n      zoom: {\n        limits: {\n          x: {\n            min: \"original\"\n          },\n          y: {\n            min: \"original\"\n          }\n        },\n        zoom: {\n          wheel: {\n            enabled: true // SET SCROLL ZOOM TO TRUE\n\n          },\n          mode: \"x\",\n          speed: 20\n        },\n        pan: {\n          enabled: true,\n          mode: \"x\",\n\n          onPanStart(event) {\n            if (isDraggingPoint) {\n              return false;\n            }\n          }\n\n        }\n      },\n      tooltip: {\n        yAlign: \"bottom\",\n        borderColor: \"#bab4cab5\",\n        borderWidth: 0.5,\n        textDirection: \"ltr\",\n        displayColors: false,\n        callbacks: {\n          label: function (context) {\n            let label = \"Date: \" + minToDate(context.parsed.x * 60);\n            return label;\n          },\n          afterLabel: function (context) {\n            let label = \"Price: \" + context.parsed.y;\n            return label;\n          },\n          beforeLabel: function (context) {\n            let label = context.dataset.label;\n            return label;\n          }\n        }\n      },\n      dragData: {\n        round: 1,\n        dragX: true,\n        showTooltip: true,\n        onDragStart: (e, datasetIndex, index, value) => {\n          setIsDraggingPoint(true);\n        },\n        onDragEnd: (e, datasetIndex, index, value) => {\n          setIsDraggingPoint(false);\n          projection.chart = mixedData;\n          dispatch({\n            type: ADD_EDIT_CHART_TO_Projection,\n            payload: projection\n          });\n        }\n      },\n      legend: {\n        display: false\n      }\n    }\n  }; // Chart data\n\n  const data = {\n    datasets: [{\n      label: selectAssets.label,\n      pointRadius: 2,\n      pointHoverRadius: 4,\n      data: mixedData.find(item => item.label === selectAssets.label).mainData,\n      fill: false,\n      borderColor: selectAssets.color || \"#a8e10f\",\n      backgroundColor: selectAssets.color || \"#a8e10f\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Before to simulate action like swap, stake, etc ... you need to determine future price of your portfolio asset's\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 119\n      }, this), \"You can edit your portfolio and future price, but this may have an influence on your actions which may no longer be valid due to a change in asset prices.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legends-container\",\n      children: mixedData && mixedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectCoin(item.label),\n        className: `legends ${selectAssets.label !== item.label && \"blur\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-box\",\n          style: {\n            backgroundColor: `${item.color}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      children: /*#__PURE__*/_jsxDEV(Scatter, {\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexChart\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [mixedData.find(item => item.label === selectAssets.label).mainData.sort((a, b) => a.x - b.x).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item, index) => {\n              const id = index + rowsPerPage * page;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"date-input table-input\",\n                  children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                    dateAdapter: AdapterDateFns,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      inputFormat: \"dd MMMM yyyy\",\n                      value: minToFormatedDate(item.x * 60),\n                      onChange: e => changeDatePerRow(e, id),\n                      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 54\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"price-input table-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: item.y,\n                    type: \"number\",\n                    placeholder: \"Price\",\n                    onChange: newValue => changePricePerRow(newValue, id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"action-td\",\n                  onClick: () => onRemove(item.x),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 23\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"date-input\",\n                children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                  dateAdapter: AdapterDateFns,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    value: addDate,\n                    onChange: newValue => {\n                      const minValue = Date.parse(newValue);\n                      setAddDate(minValue);\n                    },\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"price-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: addPrice,\n                  type: \"number\",\n                  placeholder: \"Price\",\n                  onChange: e => onPrice(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-td\",\n                onClick: () => onAdd(),\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You can add/edit price directly on the chart with draggable point or by clicking on the chart to add a new price or if you prefer, you can add or edit point in the table directly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"total-data-number\",\n          children: [\"Total points\", \" \", mixedData.find(item => item.label === selectAssets.label).mainData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: error ? \"show-error\" : \"hide-error\",\n          children: \"Invalid data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Per page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"perpage\",\n            id: \"perpage\",\n            onChange: onSelectPage,\n            children: selectOption && selectOption.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"outlined\",\n            size: \"medium\",\n            onClick: onFirst,\n            children: /*#__PURE__*/_jsxDEV(FirstIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"outlined\",\n            onClick: onPrevious,\n            children: /*#__PURE__*/_jsxDEV(PrevIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"outlined\",\n            onClick: onNext,\n            children: /*#__PURE__*/_jsxDEV(NextIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"outlined\",\n            onClick: onLast,\n            children: /*#__PURE__*/_jsxDEV(EndIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyChart, \"dis/r5Am6YDhSCidoQGViDy1kTY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MyChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Chart/myChart.js"],"names":["React","useState","useEffect","Scatter","dragdataPlugin","zoomPlugin","Chart","registerables","AdapterDateFns","LocalizationProvider","DatePicker","TextField","DateFnsUtils","useDispatch","ADD_EDIT_CHART_TO_Projection","ReactComponent","DeleteIcon","AddIcon","NextIcon","PrevIcon","EndIcon","FirstIcon","MyChart","projection","register","dispatch","months","isDraggingPoint","setIsDraggingPoint","yMax","setYMax","error","setError","dateToMin","a","formatDate","Date","min","getTime","minToDate","date","year","getFullYear","month","getMonth","day","getDate","minToFormatedDate","mixedData","setMixedData","chart","selectAssets","setSelectAssets","newArray","find","item","label","mainData","map","index","push","y","ymax","Math","max","ceil","page","setPage","rowsPerPage","setRowsPerPage","addDate","setAddDate","addPrice","setAddPrice","selectOption","value","onSelectPage","e","target","length","onFirst","onLast","floor","onPrevious","state","onNext","onPrice","parseFloat","onAdd","tmpData","x","sort","b","type","payload","onRemove","key","tmp","items","console","log","filter","changePricePerRow","id","mD","i","changeDatePerRow","newDate","handleSelectCoin","selectedData","options","responsive","title","display","text","scales","beginAtZero","stepSize","ticks","callback","lineTension","hover","mode","datasets","scatter","borderWidth","fill","pointRadius","pointHitRadius","showLine","pointHoverRadius","plugins","zoom","limits","wheel","enabled","speed","pan","onPanStart","event","tooltip","yAlign","borderColor","textDirection","displayColors","callbacks","context","parsed","afterLabel","beforeLabel","dataset","dragData","round","dragX","showTooltip","onDragStart","datasetIndex","onDragEnd","legend","data","color","backgroundColor","slice","params","newValue","minValue","parse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport dragdataPlugin from \"./chartjs-plugin-dragdata\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nimport { Chart, registerables } from \"chart.js\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_EDIT_CHART_TO_Projection } from \"../../redux/projections/projection.types\";\nimport { ReactComponent as DeleteIcon } from \"./../../assets/icons/delete.svg\";\nimport { ReactComponent as AddIcon } from \"./../../assets/icons/add.svg\";\nimport { ReactComponent as NextIcon } from \"./../../assets/icons/next.svg\";\nimport { ReactComponent as PrevIcon } from \"./../../assets/icons/prev.svg\";\nimport { ReactComponent as EndIcon } from \"./../../assets/icons/end.svg\";\nimport { ReactComponent as FirstIcon } from \"./../../assets/icons/first.svg\";\nimport \"./myChart.scss\";\n\nexport default function MyChart({projection}) {\n  Chart.register(...registerables, dragdataPlugin, zoomPlugin);\n\n  const dispatch = useDispatch();\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const [isDraggingPoint, setIsDraggingPoint] = useState();\n  const [yMax, setYMax] = useState();\n  const [error, setError] = useState(false);\n\n  // Formated Date to total minute\n  const dateToMin = (a) => {\n    const formatDate = new Date(a);\n    const min = formatDate.getTime() / 60;\n    return min;\n  };\n\n  // Total minute to formatted date\n  const minToDate = (min) => {\n    const date = new Date(min);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return year + \"/\" + month + \"/\" + day;\n  };\n\n  // Total minute to other type of formatted date\n  const minToFormatedDate = (min) => {\n    const date = new Date(min);\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return day + \" \" + months[month] + \" \" + year;\n  };\n\n  const [mixedData, setMixedData] = useState(projection.chart);\n  const [selectAssets, setSelectAssets] = useState(mixedData[0]);\n\n  // Set y max value\n  useEffect(() => {\n    let newArray = [];\n    mixedData\n      .find((item) => item.label === selectAssets.label)\n      .mainData.map((item, index) => {\n        return newArray.push(item.y);\n      });\n    const ymax = Math.max(...newArray);\n    setYMax(Math.ceil(ymax * 1.5));\n  }, [mixedData, isDraggingPoint, selectAssets.label]);\n\n  // Pagination\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDate, setAddDate] = useState(null);\n  const [addPrice, setAddPrice] = useState();\n\n  // Perpage select option\n  const selectOption = [\n    { label: \"5\", value: 5 },\n    { label: \"10\", value: 10 },\n    { label: \"20\", value: 20 },\n    { label: \"All\", value: \"all\" },\n  ];\n\n  // Select the number of per page\n  const onSelectPage = (e) => {\n    if (e.target.value === \"all\") {\n      setRowsPerPage(\n        mixedData.find((item) => item.label === selectAssets.label).mainData\n          .length\n      );\n      setPage(0);\n    } else {\n      setRowsPerPage(e.target.value);\n      setPage(0);\n    }\n  };\n\n  /** Begin pagination button functions */\n  const onFirst = () => {\n    setPage(0);\n  };\n\n  const onLast = () => {\n    setPage(\n      Math.floor(\n        mixedData.find((item) => item.label === selectAssets.label).mainData\n          .length / rowsPerPage\n      )\n    );\n  };\n\n  const onPrevious = () => {\n    if (page === 0) {\n      return;\n    }\n    setPage((state) => state - 1);\n  };\n\n  const onNext = () => {\n    if (\n      page >=\n      Math.floor(\n        mixedData.find((item) => item.label === selectAssets.label).mainData\n          .length / rowsPerPage\n      )\n    ) {\n      return;\n    } else {\n      setPage((state) => state + 1);\n    }\n  };\n  /** End pagination button functions */\n\n  // Adding price data in table\n  const onPrice = (e) => {\n    setAddPrice(parseFloat(e.target.value));\n  };\n\n  // Add one point in table\n  const onAdd = () => {\n    if (!addDate || !addPrice) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n    }\n    const tmpData = mixedData.map((item) => {\n      if (item.label === selectAssets.label) {\n        return {\n          ...item,\n          mainData: [...item.mainData, { x: addDate / 60, y: addPrice }].sort(\n            (a, b) => a.x - b.x\n          ),\n        };\n      } else {\n        return item;\n      }\n    });\n    setMixedData(tmpData);\n    projection.chart=tmpData\n    dispatch({ type: ADD_EDIT_CHART_TO_Projection, payload: projection });\n    setAddPrice(\"\");\n    setAddDate(null);\n  };\n\n  // Remove one point from table\n  const onRemove = (key) => {\n    const tmp = mixedData.map((items) => {\n      if (items.label === selectAssets.label) {\n        console.log(\"tmpData\");\n        const tmpData = {\n          ...items,\n          mainData: items.mainData.filter((item) => item.x !== key),\n        };\n        return tmpData;\n      } else {\n        return items;\n      }\n    });\n    setMixedData(tmp);\n    projection.chart=tmp\n    dispatch({ type: ADD_EDIT_CHART_TO_Projection, payload: projection });\n  };\n\n  // Price editing function in per row\n  const changePricePerRow = (e, id) => {\n    const tmp = mixedData.map((item) => {\n      if (item.label === selectAssets.label) {\n        const mD = item.mainData.map((i, index) => {\n          if (index === id) {\n            return { x: i.x, y: e.target.value };\n          } else {\n            return i;\n          }\n        });\n        return { ...item, mainData: mD };\n      } else {\n        return item;\n      }\n    });\n    setMixedData(tmp);\n    projection.chart=tmp\n    dispatch({ type: ADD_EDIT_CHART_TO_Projection, payload: projection });\n  };\n\n  // Date editing function in per row\n  const changeDatePerRow = (newDate, id) => {\n    const tmp = mixedData.map((item) => {\n      if (item.label === selectAssets.label) {\n        const mD = item.mainData.map((i, index) => {\n          if (index === id) {\n            return { x: dateToMin(newDate), y: i.y };\n          } else {\n            return i;\n          }\n        });\n        return { ...item, mainData: mD };\n      } else {\n        return item;\n      }\n    });\n    setMixedData(tmp);\n    projection.chart=tmp\n    dispatch({ type: ADD_EDIT_CHART_TO_Projection, payload: projection });\n  };\n\n  // Click functino when select coin\n  const handleSelectCoin = (label) => {\n    const selectedData = mixedData.find((item) => item.label === label);\n    setSelectAssets(selectedData);\n  };\n\n  // Chart main optinos\n  const options = {\n    responsive: true,\n    title: {\n      display: true,\n      text: \"Chart.js Time Scale\",\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: yMax,\n        stepSize: 0.01,\n        title: {\n          text: \"Price in dollar\",\n          display: true,\n        },\n      },\n      x: {\n        ticks: {\n          callback: function (value, index, ticks) {\n            return minToDate(value * 60);\n          },\n        },\n      },\n    },\n    lineTension: 0.1,\n    hover: {\n      mode: \"dataset\",\n    },\n    datasets: {\n      scatter: {\n        borderWidth: 2.5,\n        fill: false,\n        pointRadius: 5,\n        pointHitRadius: 5,\n        showLine: true,\n      },\n    },\n    pointHoverRadius: 3,\n    plugins: {\n      zoom: {\n        limits: {\n          x: { min: \"original\" },\n          y: { min: \"original\" },\n        },\n        zoom: {\n          wheel: {\n            enabled: true, // SET SCROLL ZOOM TO TRUE\n          },\n          mode: \"x\",\n          speed: 20,\n        },\n        pan: {\n          enabled: true,\n          mode: \"x\",\n          onPanStart(event) {\n            if (isDraggingPoint) {\n              return false;\n            }\n          },\n        },\n      },\n      tooltip: {\n        yAlign: \"bottom\",\n        borderColor: \"#bab4cab5\",\n        borderWidth: 0.5,\n        textDirection: \"ltr\",\n        displayColors: false,\n        callbacks: {\n          label: function (context) {\n            let label = \"Date: \" + minToDate(context.parsed.x * 60);\n            return label;\n          },\n          afterLabel: function (context) {\n            let label = \"Price: \" + context.parsed.y;\n            return label;\n          },\n          beforeLabel: function (context) {\n            let label = context.dataset.label;\n            return label;\n          },\n        },\n      },\n      dragData: {\n        round: 1,\n        dragX: true,\n        showTooltip: true,\n        onDragStart: (e, datasetIndex, index, value) => {\n          setIsDraggingPoint(true);\n        },\n        onDragEnd: (e, datasetIndex, index, value) => {\n          setIsDraggingPoint(false);\n          projection.chart=mixedData\n          dispatch({ type: ADD_EDIT_CHART_TO_Projection, payload: projection });\n        },\n      },\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  // Chart data\n  const data = {\n    datasets: [\n      {\n        label: selectAssets.label,\n        pointRadius: 2,\n        pointHoverRadius: 4,\n        data: mixedData.find((item) => item.label === selectAssets.label)\n          .mainData,\n        fill: false,\n        borderColor: selectAssets.color || \"#a8e10f\",\n        backgroundColor: selectAssets.color || \"#a8e10f\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"main\">\n      <p>\n      Before to simulate action like swap, stake, etc ... you need to determine future price of your portfolio asset's<br></br>You can edit your portfolio and future price, but this may have an influence on your actions which may no longer be valid due to a change in asset prices.\n      </p>\n      <div className=\"legends-container\">\n        {mixedData &&\n          mixedData.map((item, index) => (\n            <div\n              onClick={() => handleSelectCoin(item.label)}\n              className={`legends ${\n                selectAssets.label !== item.label && \"blur\"\n              }`}\n              key={index}\n            >\n              <div\n                className=\"legend-box\"\n                style={{ backgroundColor: `${item.color}` }}\n              ></div>\n              <p>{item.label}</p>\n            </div>\n          ))}\n      </div>\n      <div className=\"chartContainer\">\n        <Scatter options={options} data={data} />\n      </div>\n      <div className=\"main-container\">\n        <div className=\"flexChart\">\n          <table >\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Price</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {mixedData\n                .find((item) => item.label === selectAssets.label)\n                .mainData.sort((a, b) => a.x - b.x)\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((item, index) => {\n                  const id = index + rowsPerPage * page;\n                  return (\n                    <tr key={id}>\n                      <td className=\"date-input table-input\">\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                          <DatePicker\n                            inputFormat=\"dd MMMM yyyy\"\n                            value={minToFormatedDate(item.x * 60)}\n                            onChange={(e) => changeDatePerRow(e, id)}\n                            renderInput={(params) => <TextField {...params} />}\n                          />\n                        </LocalizationProvider>\n                      </td>\n                      <td className=\"price-input table-input\">\n                        <input\n                          value={item.y}\n                          type=\"number\"\n                          placeholder=\"Price\"\n                          onChange={(newValue) => changePricePerRow(newValue, id)}\n                        />\n                      </td>\n                      <td className=\"action-td\" onClick={() => onRemove(item.x)}>\n                        <DeleteIcon />\n                      </td>\n                    </tr>\n                  );\n                })}\n              <tr>\n                <td className=\"date-input\">\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      value={addDate}\n                      onChange={(newValue) => {\n                        const minValue = Date.parse(newValue);\n                        setAddDate(minValue);\n                      }}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                </td>\n                <td className=\"price-input\">\n                  <input\n                    value={addPrice}\n                    type=\"number\"\n                    placeholder=\"Price\"\n                    onChange={(e) => onPrice(e)}\n                  />\n                </td>\n                <td className=\"action-td\" onClick={() => onAdd()}>\n                  <AddIcon />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <p>You can add/edit price directly on the chart with draggable point or by clicking on the chart to add a new price or if you prefer, you can add or edit point in the table directly</p>       \n        </div>\n        <div className=\"badge-container\">\n          <p className=\"total-data-number\">\n            Total points{\" \"}\n            {\n              mixedData.find((item) => item.label === selectAssets.label)\n                .mainData.length\n            }\n          </p>\n          <p className={error ? \"show-error\" : \"hide-error\"}>Invalid data</p>\n        </div>\n        <div className=\"pagination-container\">\n          <div className=\"select-page\">\n            <p>Per page</p>\n            <select name=\"perpage\" id=\"perpage\" onChange={onSelectPage}>\n              {selectOption &&\n                selectOption.map((item, index) => (\n                  <option value={item.value} key={index}>\n                    {item.label}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"buttons-container\">\n            <button variant=\"outlined\" size=\"medium\" onClick={onFirst}>\n              <FirstIcon />\n            </button>\n            <button variant=\"outlined\" onClick={onPrevious}>\n              <PrevIcon />\n            </button>\n            <button variant=\"outlined\" onClick={onNext}>\n              <NextIcon />\n            </button>\n            <button variant=\"outlined\" onClick={onLast}>\n              <EndIcon />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}