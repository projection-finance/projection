{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Modals/addProject.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { getCoins } from \"../../adapters/apis\";\nimport { ADD_Projection, EDIT_Projection } from \"../../redux/projctions/prjoction.types\";\nimport Input from \"@mui/material/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 500,\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4\n};\nexport default function AddProjectModal(_ref) {\n  _s();\n\n  let {\n    open,\n    handleClose,\n    handleOpen,\n    projectView,\n    projctionName\n  } = _ref;\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(null);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [showErr, setShowErr] = React.useState(false);\n  const [projction, setProjction] = React.useState(\"\");\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showQt, setShowQt] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [qt, setQt] = React.useState(0);\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  React.useEffect(() => {\n    console.log(projctionName, projectView);\n    setProjction(projectView.length !== 0 ? projectView[0].name : projctionName);\n    setSelectedCoins(projectView.length !== 0 ? projectView[0].coins : []);\n  }, [projctionName, projectView]);\n\n  const addCoins = () => {\n    console.log(parseInt(qt));\n    selectedCoins.push({ ...currentCoin,\n      quantity: parseInt(qt),\n      currentPrice: parseInt(currentPrice)\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const deleteCoin = index => {\n    selectedCoins.splice(index, 1);\n    setSelectedCoins([...selectedCoins]);\n  };\n\n  const handelAfterAddQ = () => {\n    if (qt <= 0 || isNaN(qt)) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    if (currentPrice <= 0 || isNaN(currentPrice)) {\n      setErreur(\"Current Price must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    addCoins(qt);\n    setQt(0);\n    setCurrentPrice(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n\n  const addQuantity = value => {\n    const exist = selectedCoins.some(elem => elem.name === value.name);\n\n    if (exist) {\n      setErreur(\"Coin already added!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n  };\n\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n    if (!localCoins || JSON.parse(localCoins).length === 0) getCoins().then(res => {\n      setCoins(res.data);\n      localStorage.setItem(\"coins\", JSON.stringify(res.data));\n    });else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const handleQtChange = event => {\n    setQt(event.target.value);\n  };\n\n  const handleQtChangeTable = (event, index) => {\n    console.log(event.target.value);\n    selectedCoins[index].quantity = parseInt(event.target.value);\n    setSelectedCoins(selectedCoins);\n    console.log(selectedCoins);\n  };\n\n  const handleCpChange = event => {\n    setCurrentPrice(event.target.value);\n  };\n\n  const handlePrjChange = event => {\n    setProjction(event.target.value);\n  };\n\n  const clearForm = () => {\n    setProjction(\"\");\n    setQt(0);\n    setSelectedCoins([]);\n    setCurrentPrice(0);\n    setValue(\"\");\n  };\n\n  const handleCloseModal = () => {\n    if (projectView.length === 0) clearForm();\n    handleClose();\n  };\n\n  const handleAddPrjoect = () => {\n    var _projectView$;\n\n    if (selectedCoins.length === 0) {\n      setErreur(\"You need to add coins!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    const project = {\n      id: (_projectView$ = projectView[0]) === null || _projectView$ === void 0 ? void 0 : _projectView$.id,\n      name: projction,\n      coins: selectedCoins\n    };\n    if (projectView.length !== 0) dispatch({\n      type: EDIT_Projection,\n      payload: project\n    });else dispatch({\n      type: ADD_Projection,\n      payload: project\n    });\n    handleCloseModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        className: styles[\"modal\"],\n        children: [showErr ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"error\"],\n          children: erreur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 22\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: \"Configure your projection, by adding assets to your portfolio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: \"100%\"\n          },\n          label: \"Prjoction\",\n          value: projction,\n          onChange: handlePrjChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: value,\n          onChange: (event, newValue) => {\n            if (typeof newValue === \"string\") {\n              setValue({\n                name: newValue\n              });\n              addQuantity(newValue);\n            } else if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setValue({\n                name: newValue.inputValue\n              });\n              addQuantity({\n                name: newValue.inputValue,\n                symbol: \"\"\n              });\n            } else {\n              setValue(newValue);\n              if (newValue) addQuantity(newValue);\n            }\n          },\n          filterOptions: (options, params) => {\n            const {\n              inputValue\n            } = params;\n            if (inputValue.length === 0) return [];\n            const filtered = options.filter(item => item.name.toLowerCase().startsWith(inputValue) || item.symbol.toLowerCase().startsWith(inputValue)); // Suggest the creation of a new value\n\n            const isExisting = options.some(option => inputValue === option.name);\n\n            if (inputValue !== \"\" && !isExisting) {\n              filtered.push({\n                inputValue,\n                name: `Add \"${inputValue}\"`\n              });\n            }\n\n            return filtered;\n          },\n          selectOnFocus: true,\n          clearOnBlur: true,\n          handleHomeEndKeys: true,\n          id: \"free-solo-with-text-demo\",\n          options: coins,\n          getOptionLabel: option => {\n            if (typeof option === \"string\") {\n              return option;\n            }\n\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n\n            return option.name;\n          },\n          renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n            children: option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 46\n          }, this),\n          sx: {\n            width: \"100%\"\n          },\n          freeSolo: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Assets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), showQt ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"div-flex\"],\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            defaultValue: qt,\n            label: \"amount\",\n            onChange: handleQtChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            label: \"current price\",\n            defaultValue: currentPrice,\n            onChange: handleCpChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handelAfterAddQ,\n            children: \"add coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this) : \"\", selectedCoins.length ? /*#__PURE__*/_jsxDEV(SelectedCoinsTable, {\n          coins: selectedCoins,\n          handleQtChangeTable: handleQtChangeTable,\n          deleteCoin: deleteCoin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"modal-footer\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAddPrjoect,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddProjectModal, \"JTCLvABOZ35HkrIhpoU+ik6gc/o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddProjectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProjectModal\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Modals/addProject.js"],"names":["React","Box","Button","Typography","Modal","styles","TextField","Autocomplete","SelectedCoinsTable","useDispatch","getCoins","ADD_Projection","EDIT_Projection","Input","style","position","top","left","transform","width","height","overflowY","bgcolor","p","AddProjectModal","open","handleClose","handleOpen","projectView","projctionName","dispatch","value","setValue","useState","currentPrice","setCurrentPrice","currentCoin","setCurrentCoin","showErr","setShowErr","projction","setProjction","erreur","setErreur","showQt","setShowQt","coins","setCoins","qt","setQt","selectedCoins","setSelectedCoins","useEffect","console","log","length","name","addCoins","parseInt","push","quantity","deleteCoin","index","splice","handelAfterAddQ","isNaN","addQuantity","exist","some","elem","localCoins","localStorage","getItem","JSON","parse","then","res","data","setItem","stringify","handleQtChange","event","target","handleQtChangeTable","handleCpChange","handlePrjChange","clearForm","handleCloseModal","handleAddPrjoect","project","id","type","payload","mt","newValue","inputValue","symbol","options","params","filtered","filter","item","toLowerCase","startsWith","isExisting","option","props"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { getCoins } from \"../../adapters/apis\";\nimport {\n  ADD_Projection,\n  EDIT_Projection,\n} from \"../../redux/projctions/prjoction.types\";\nimport Input from \"@mui/material/Input\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 500,\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4,\n};\n\nexport default function AddProjectModal({\n  open,\n  handleClose,\n  handleOpen,\n  projectView,\n  projctionName,\n}) {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(null);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [showErr, setShowErr] = React.useState(false);\n  const [projction, setProjction] = React.useState(\"\");\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showQt, setShowQt] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [qt, setQt] = React.useState(0);\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  React.useEffect(() => {\n    console.log(projctionName, projectView)\n    setProjction(\n      projectView.length !== 0 ? projectView[0].name : projctionName\n    );\n    setSelectedCoins(projectView.length !== 0 ? projectView[0].coins : []);\n  }, [projctionName, projectView]);\n  const addCoins = () => {\n    console.log(parseInt(qt));\n    selectedCoins.push({\n      ...currentCoin,\n      quantity: parseInt(qt),\n      currentPrice: parseInt(currentPrice),\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const deleteCoin = (index) => {\n    selectedCoins.splice(index, 1);\n    setSelectedCoins([...selectedCoins]);\n  };\n  const handelAfterAddQ = () => {\n    if (qt <= 0 || isNaN(qt)) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    if (currentPrice <= 0 || isNaN(currentPrice)) {\n      setErreur(\"Current Price must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    addCoins(qt);\n    setQt(0);\n    setCurrentPrice(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n  const addQuantity = (value) => {\n    const exist = selectedCoins.some((elem) => elem.name === value.name);\n    if (exist) {\n      setErreur(\"Coin already added!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n  };\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n\n    if (!localCoins || JSON.parse(localCoins).length === 0)\n      getCoins().then((res) => {\n        setCoins(res.data);\n        localStorage.setItem(\"coins\", JSON.stringify(res.data));\n      });\n    else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const handleQtChange = (event) => {\n    setQt(event.target.value);\n  };\n  const handleQtChangeTable = (event, index) => {\n    console.log(event.target.value);\n    selectedCoins[index].quantity = parseInt(event.target.value);\n    setSelectedCoins(selectedCoins);\n    console.log(selectedCoins);\n  };\n  const handleCpChange = (event) => {\n    setCurrentPrice(event.target.value);\n  };\n  const handlePrjChange = (event) => {\n    setProjction(event.target.value);\n  };\n  const clearForm = () => {\n    setProjction(\"\");\n    setQt(0);\n    setSelectedCoins([]);\n    setCurrentPrice(0);\n    setValue(\"\");\n  };\n  const handleCloseModal = () => {\n    if(projectView.length===0)\n      clearForm();\n    handleClose();\n  };\n  const handleAddPrjoect = () => {\n    if (selectedCoins.length === 0) {\n      setErreur(\"You need to add coins!\");\n      setShowErr(true);\n      return;\n    }\n    setShowErr(false);\n    setErreur(\"\");\n    const project = {\n      id: projectView[0]?.id,\n      name: projction,\n      coins: selectedCoins,\n    };\n    if (projectView.length !== 0)\n      dispatch({ type: EDIT_Projection, payload: project });\n    else dispatch({ type: ADD_Projection, payload: project });\n    handleCloseModal();\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style} className={styles[\"modal\"]}>\n          {showErr ? <p className={styles[\"error\"]}>{erreur}</p> : \"\"}\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Configure your projection, by adding assets to your portfolio:\n          </Typography>\n\n          <TextField\n            sx={{ width: \"100%\" }}\n            label=\"Prjoction\"\n            value={projction}\n            onChange={handlePrjChange}\n          />\n          <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n              if (typeof newValue === \"string\") {\n                setValue({\n                  name: newValue,\n                });\n                addQuantity(newValue);\n              } else if (newValue && newValue.inputValue) {\n                // Create a new value from the user input\n                setValue({\n                  name: newValue.inputValue,\n                });\n                addQuantity({ name: newValue.inputValue, symbol: \"\" });\n              } else {\n                setValue(newValue);\n                if (newValue) addQuantity(newValue);\n              }\n            }}\n            filterOptions={(options, params) => {\n              const { inputValue } = params;\n              if (inputValue.length === 0) return [];\n              const filtered = options.filter(\n                (item) =>\n                  item.name.toLowerCase().startsWith(inputValue) ||\n                  item.symbol.toLowerCase().startsWith(inputValue)\n              );\n\n              // Suggest the creation of a new value\n              const isExisting = options.some(\n                (option) => inputValue === option.name\n              );\n              if (inputValue !== \"\" && !isExisting) {\n                filtered.push({\n                  inputValue,\n                  name: `Add \"${inputValue}\"`,\n                });\n              }\n\n              return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={coins}\n            getOptionLabel={(option) => {\n              if (typeof option === \"string\") {\n                return option;\n              }\n              if (option.inputValue) {\n                return option.inputValue;\n              }\n              return option.name;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.name}</li>}\n            sx={{ width: \"100%\" }}\n            freeSolo\n            renderInput={(params) => <TextField {...params} label=\"Assets\" />}\n          />\n          {showQt ? (\n            <div className={styles[\"div-flex\"]}>\n              <Input\n                type=\"number\"\n                defaultValue={qt}\n                label=\"amount\"\n                onChange={handleQtChange}\n              />\n              <Input\n                type=\"number\"\n                label=\"current price\"\n                defaultValue={currentPrice}\n                onChange={handleCpChange}\n              />\n\n              <Button variant=\"contained\" onClick={handelAfterAddQ}>\n                add coin\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {selectedCoins.length ? (\n            <SelectedCoinsTable\n              coins={selectedCoins}\n              handleQtChangeTable={handleQtChangeTable}\n              deleteCoin={deleteCoin}\n            />\n          ) : (\n            \"\"\n          )}\n\n          <div className={styles[\"modal-footer\"]}>\n            <Button variant=\"contained\" onClick={handleAddPrjoect}>\n              Save Changes\n            </Button>\n            <Button variant=\"outlined\" onClick={handleCloseModal}>\n              Close\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}