{"ast":null,"code":"import { ADD_Projection, EDIT_Projection, ADD_ACTION_TO_Projection, EDIT_ACTION_TO_Projection, DELETE_ACTION_TO_Projection, ADD_EDIT_CHART_TO_Projection } from \"./projection.types\";\nconst INITIAL_STATE = {\n  projections: JSON.parse(localStorage.getItem(\"projections\")) || [],\n  project: null\n};\n\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\".split(\"\");\n  var color = \"#\";\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nconst dateToMin = a => {\n  const formatDate = new Date(a);\n  const min = formatDate.getTime() / 60;\n  return min;\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let projects, projectEdit;\n\n  switch (action.type) {\n    case ADD_Projection:\n      const project = action.payload;\n      project.id = state.projections.length;\n      project.actions = [];\n      project.chart = [];\n      project.coins.forEach(element => {\n        project.chart.push({\n          label: element.symbol,\n          color: getRandomColor(),\n          mainData: [{\n            x: dateToMin(project.startDate),\n            y: element.currentPrice\n          }, {\n            x: dateToMin(project.endDate),\n            y: element.currentPrice\n          }]\n        });\n      });\n      const projections = [...state.projections, project];\n      localStorage.setItem(\"projections\", JSON.stringify(projections));\n      return { ...state,\n        projections\n      };\n\n    case EDIT_Projection:\n      projects = state.projections;\n      projectEdit = action.payload;\n      projects[projectEdit.id] = projectEdit;\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return { ...state,\n        projections: projects\n      };\n\n    case ADD_ACTION_TO_Projection:\n      projects = state.projections;\n      projectEdit = action.payload.projection;\n      projects[projectEdit.id].actions.push(action.payload.action);\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return { ...state,\n        projections: projects\n      };\n\n    case DELETE_ACTION_TO_Projection:\n      projects = state.projections;\n      projectEdit = action.payload.projection;\n      const act = action.payload.action;\n      projects[projectEdit.id].actions = projects[projectEdit.id].actions.filter(acti => act.id !== acti.id);\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return { ...state,\n        projections: projects\n      };\n\n    case ADD_EDIT_CHART_TO_Projection:\n      projects = state.projections;\n      projects[action.payload.id] = action.payload;\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return { ...state,\n        projections: projects\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/redux/projections/projection.reducer.js"],"names":["ADD_Projection","EDIT_Projection","ADD_ACTION_TO_Projection","EDIT_ACTION_TO_Projection","DELETE_ACTION_TO_Projection","ADD_EDIT_CHART_TO_Projection","INITIAL_STATE","projections","JSON","parse","localStorage","getItem","project","getRandomColor","letters","split","color","i","Math","floor","random","dateToMin","a","formatDate","Date","min","getTime","reducer","state","action","projects","projectEdit","type","payload","id","length","actions","chart","coins","forEach","element","push","label","symbol","mainData","x","startDate","y","currentPrice","endDate","setItem","stringify","projection","act","filter","acti"],"mappings":"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","sourcesContent":["import {\n  ADD_Projection,\n  EDIT_Projection,\n  ADD_ACTION_TO_Projection,\n  EDIT_ACTION_TO_Projection,\n  DELETE_ACTION_TO_Projection,\n  ADD_EDIT_CHART_TO_Projection,\n} from \"./projection.types\";\n\nconst INITIAL_STATE = {\n  projections: JSON.parse(localStorage.getItem(\"projections\")) || [],\n  project: null,\n};\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\".split(\"\");\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nconst dateToMin = (a) => {\n  const formatDate = new Date(a);\n  const min = formatDate.getTime() / 60;\n  return min;\n};\nconst reducer = (state = INITIAL_STATE, action) => {\n  let projects, projectEdit;\n  switch (action.type) {\n    case ADD_Projection:\n      const project = action.payload;\n      project.id = state.projections.length;\n      project.actions = [];\n      project.chart = [];\n      project.coins.forEach((element) => {\n        project.chart.push({\n          label: element.symbol,\n          color: getRandomColor(),\n          mainData: [\n            { x: dateToMin(project.startDate), y: element.currentPrice },\n            { x: dateToMin(project.endDate), y: element.currentPrice },\n          ],\n        });\n      });\n      const projections = [...state.projections, project];\n      localStorage.setItem(\"projections\", JSON.stringify(projections));\n      return {\n        ...state,\n        projections,\n      };\n    case EDIT_Projection:\n      projects = state.projections;\n      projectEdit = action.payload;\n      projects[projectEdit.id] = projectEdit;\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return {\n        ...state,\n        projections: projects,\n      };\n    case ADD_ACTION_TO_Projection:\n      projects = state.projections;\n      projectEdit = action.payload.projection;\n      projects[projectEdit.id].actions.push(action.payload.action);\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return {\n        ...state,\n        projections: projects,\n      };\n    case DELETE_ACTION_TO_Projection:\n      projects = state.projections;\n      projectEdit = action.payload.projection;\n      const act = action.payload.action;\n      projects[projectEdit.id].actions = projects[\n        projectEdit.id\n      ].actions.filter((acti) => act.id !== acti.id);\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return {\n        ...state,\n        projections: projects,\n      };\n    case ADD_EDIT_CHART_TO_Projection:\n      projects = state.projections;\n      projects[action.payload.id] = action.payload;\n      localStorage.setItem(\"projections\", JSON.stringify(projects));\n      return {\n        ...state,\n        projections: projects,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}