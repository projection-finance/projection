{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/action/action.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./action.module.css\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport Card from \"@mui/material/Card\";\nimport moment from \"moment\";\nimport SelectedCoinsTable from \"../Modals/selectedCoinsTable\";\nimport Arrow from \"../../assets/images/arrow.svg\";\nimport { Button } from \"@mui/material\";\nimport ActionListModal from \"../Modals/actionListModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardItem(_ref) {\n  let {\n    statu,\n    text\n  } = _ref;\n  const sum = statu.coins.reduce((tot, elem) => {\n    return tot + elem.currentPrice * elem.quantity;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: [\"Portfolio -\", moment(statu.date).format(\"DD/MM/YYYY\"), \" \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 1.5\n        },\n        color: \"text.secondary\",\n        children: [sum.toFixed(2), \" $\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectedCoinsTable, {\n        coins: statu.coins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CardItem;\n\nfunction CardItemAction(_ref2) {\n  let {\n    handleActionListOpen\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        component: \"div\",\n        children: \"Add your first action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          backgroundColor: \"#0D6EFD\",\n          color: \"#212529\",\n          marginTop: 3\n        },\n        onClick: handleActionListOpen,\n        children: \"Select an action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = CardItemAction;\n\nfunction CardItemIcon() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        width: \"fit-content\",\n        paddingBottom: \"0px !important\",\n        padding: \"5px !important\",\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Arrow,\n        alt: \"Arrow Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = CardItemIcon;\nexport default function Action(_ref3) {\n  _s();\n\n  let {\n    projection\n  } = _ref3;\n  const [open, setOpen] = React.useState(false);\n\n  const handleActionListOpen = () => {\n    setOpen(true);\n  };\n\n  const handleAddAction = () => {};\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"container\"],\n    children: [open ? /*#__PURE__*/_jsxDEV(ActionListModal, {\n      projection: projection,\n      open: open,\n      handleClose: handleClose,\n      handleAddAction: handleAddAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Now you can simulate actions on your virtual portfolio, let's go !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          width: \"fit-content\",\n          margin: 0\n        },\n        spacing: 3,\n        children: projection.status.map((statu, index) => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                width: \"fit-content\"\n              },\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardItem, {\n                statu: statu,\n                text: index === 0 ? \" (start)\" : projection.status.length - 1 === index ? \" (end) \" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), index < projection.status.length - 1 ? /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                width: \"fit-content\",\n                margin: \"20px auto !important\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CardItemIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this) : \"\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"fit-content\",\n          margin: 0\n        },\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            border: \"2px #7B61FF dashed\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardItemAction, {\n            handleActionListOpen: handleActionListOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Action, \"6dOGeNFz7lEsAiwKPNBpp5+ZTyc=\");\n\n_c4 = Action;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CardItem\");\n$RefreshReg$(_c2, \"CardItemAction\");\n$RefreshReg$(_c3, \"CardItemIcon\");\n$RefreshReg$(_c4, \"Action\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/action/action.js"],"names":["React","styles","CardContent","Typography","Stack","Card","moment","SelectedCoinsTable","Arrow","Button","ActionListModal","CardItem","statu","text","sum","coins","reduce","tot","elem","currentPrice","quantity","date","format","mb","toFixed","CardItemAction","handleActionListOpen","backgroundColor","color","marginTop","CardItemIcon","width","paddingBottom","padding","margin","Action","projection","open","setOpen","useState","handleAddAction","handleClose","status","map","index","length","display","justifyContent","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./action.module.css\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport Card from \"@mui/material/Card\";\nimport moment from \"moment\";\nimport SelectedCoinsTable from \"../Modals/selectedCoinsTable\";\nimport Arrow from \"../../assets/images/arrow.svg\";\nimport { Button } from \"@mui/material\";\nimport ActionListModal from \"../Modals/actionListModal\";\n\nfunction CardItem({ statu, text }) {\n  const sum = statu.coins.reduce((tot, elem) => {\n    return tot + elem.currentPrice * elem.quantity;\n  }, 0);\n  return (\n    <React.Fragment>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\">\n          Portfolio -{moment(statu.date).format(\"DD/MM/YYYY\")} {text}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {sum.toFixed(2)} $\n        </Typography>\n        <SelectedCoinsTable coins={statu.coins} />\n      </CardContent>\n    </React.Fragment>\n  );\n}\n\nfunction CardItemAction({ handleActionListOpen }) {\n  return (\n    <React.Fragment>\n      <CardContent>\n        <Typography variant=\"p\" component=\"div\">\n          Add your first action\n        </Typography>\n        <Button\n          variant=\"contained\"\n          sx={{ backgroundColor: \"#0D6EFD\", color: \"#212529\" ,marginTop:3}}\n          onClick={handleActionListOpen}\n        >\n          Select an action\n        </Button>\n      </CardContent>\n    </React.Fragment>\n  );\n}\n\nfunction CardItemIcon() {\n  return (\n    <React.Fragment>\n      <CardContent\n        sx={{\n          width: \"fit-content\",\n          paddingBottom: \"0px !important\",\n          padding: \"5px !important\",\n          margin: \"0 auto\",\n        }}\n      >\n        <img src={Arrow} alt=\"Arrow Down\" />\n      </CardContent>\n    </React.Fragment>\n  );\n}\n\nexport default function Action({ projection }) {\n    const [open,setOpen] = React.useState(false)\n    const handleActionListOpen = () => {setOpen(true)};\n    const handleAddAction = () => {};\n    const handleClose = () => {setOpen(false)};\n\n  return (\n    <div className={styles[\"container\"]}>\n        {\n            open ? <ActionListModal projection={projection} open={open} handleClose={handleClose} handleAddAction={handleAddAction} /> :''\n        }\n      <p>Now you can simulate actions on your virtual portfolio, let's go !</p>\n      <Stack direction=\"row\" spacing={6}>\n        <Stack\n          sx={{\n            width: \"fit-content\",\n            margin: 0,\n          }}\n          spacing={3}\n        >\n          {projection.status.map((statu, index) => {\n            return (\n              <React.Fragment key={index}>\n                <Card sx={{ width: \"fit-content\" }} variant=\"outlined\">\n                  <CardItem\n                    statu={statu}\n                    text={\n                      index === 0\n                        ? \" (start)\"\n                        : projection.status.length - 1 === index\n                        ? \" (end) \"\n                        : \"\"\n                    }\n                  />\n                </Card>\n                {index < projection.status.length - 1 ? (\n                  <Card\n                    sx={{\n                      width: \"fit-content\",\n                      margin: \"20px auto !important\",\n                    }}\n                  >\n                    <CardItemIcon />\n                  </Card>\n                ) : (\n                  \"\"\n                )}\n              </React.Fragment>\n            );\n          })}\n        </Stack>\n        <Stack\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"fit-content\",\n            margin: 0,\n          }}\n          spacing={3}\n        >\n          <Card sx={{border: \"2px #7B61FF dashed\"}}>\n            <CardItemAction handleActionListOpen={handleActionListOpen} />\n          </Card>\n        </Stack>\n      </Stack>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}