{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/projection/projectionTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Button from \"@mui/material/Button\";\nimport SelectedCoinsTable from \"../Modals/selectedCoinsTable\";\nimport moment from 'moment';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Action1 from \"../Modals/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Row(props) {\n  _s();\n\n  const {\n    projection,\n    actions,\n    setSelectedProjection,\n    setSelectedAction\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [actionValue, setActionValue] = React.useState(-1);\n\n  const handleChange = event => {\n    const item = event.target.value;\n    setActionValue(item);\n    actions[item].actionOpen();\n    setSelectedAction(actions[item]);\n    setActionValue(-1);\n  };\n\n  React.useEffect(() => {\n    setSelectedProjection(projection);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      sx: {\n        \"& > *\": {\n          borderBottom: \"unset\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: projection.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: moment(projection.startDate).format('DD-MM-YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: moment(projection.endDate).format('DD-MM-YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            label: \"Make Action\",\n            onChange: handleChange,\n            value: actionValue,\n            children: actions.map((action, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: index,\n                children: action.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              margin: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Coins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SelectedCoinsTable, {\n              coins: projection.coins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"1D7/anvO40OcAtg5+5L8GgddC9E=\");\n\n_c = Row;\nexport default function ProjctionTable(_ref) {\n  _s2();\n\n  let {\n    projections\n  } = _ref;\n  const [openAction1, setOpenAction1] = React.useState(false);\n  const [selectedProjection, setSelectedProjection] = React.useState(null);\n  const [selectedAction, setSelectedAction] = React.useState(null);\n\n  const handleOpenAction1 = () => setOpenAction1(true);\n\n  const handleCloseAction1 = () => setOpenAction1(false);\n\n  const actions = [{\n    name: \"Token price variation\",\n    actionOpen: handleOpenAction1\n  }, {\n    name: \"Swap\",\n    actionOpen: handleOpenAction1\n  }, {\n    name: \"Stake\",\n    actionOpen: handleOpenAction1\n  }, {\n    name: \"Add token\",\n    actionOpen: handleOpenAction1\n  }, {\n    name: \"Withdraw token\",\n    actionOpen: handleOpenAction1\n  }, {\n    name: \"LP token(s)\",\n    actionOpen: handleOpenAction1\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", openAction1 ? /*#__PURE__*/_jsxDEV(Action1, {\n      action: selectedAction,\n      open: openAction1,\n      projection: selectedProjection,\n      handleClose: handleCloseAction1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 22\n    }, this) : '', /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"collapsible table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: projections.map((prj, index) => /*#__PURE__*/_jsxDEV(Row, {\n            projection: prj,\n            setSelectedProjection: setSelectedProjection,\n            setSelectedAction: setSelectedAction,\n            actions: actions\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ProjctionTable, \"4WbSxeWW33XSvZCU9TXRfynH6Yk=\");\n\n_c2 = ProjctionTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"ProjctionTable\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/projection/projectionTable.js"],"names":["React","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Button","SelectedCoinsTable","moment","InputLabel","MenuItem","FormControl","Select","Action1","Row","props","projection","actions","setSelectedProjection","setSelectedAction","open","setOpen","useState","actionValue","setActionValue","handleChange","event","item","target","value","actionOpen","useEffect","borderBottom","name","startDate","format","endDate","map","action","index","paddingBottom","paddingTop","margin","coins","ProjctionTable","projections","openAction1","setOpenAction1","selectedProjection","selectedAction","handleOpenAction1","handleCloseAction1","prj"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Button from \"@mui/material/Button\";\nimport SelectedCoinsTable from \"../Modals/selectedCoinsTable\";\nimport moment from 'moment'\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Action1 from \"../Modals/action\";\nfunction Row(props) {\n  const { projection,actions,setSelectedProjection,setSelectedAction } = props;\n  const [open, setOpen] = React.useState(false);\n  const [actionValue, setActionValue] = React.useState(-1);\n  const handleChange = (event) => {\n    const item=event.target.value;\n    setActionValue(item)\n    actions[item].actionOpen();\n    setSelectedAction(actions[item])\n    setActionValue(-1)\n  }\n  React.useEffect(()=>{\n    setSelectedProjection(projection)\n  },[])\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {projection.name}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {moment(projection.startDate).format('DD-MM-YYYY')}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {moment(projection.endDate).format('DD-MM-YYYY')}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Actions</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            label=\"Make Action\"\n            onChange={handleChange}\n            value={actionValue}\n          >\n            {\n              actions.map((action,index)=>{\n                return <MenuItem key={index} value={index}>{action.name}</MenuItem>\n              })\n              }\n          </Select>\n        </FormControl>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Coins\n              </Typography>\n              <SelectedCoinsTable coins={projection.coins} />\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nexport default function ProjctionTable({ projections }) {\n  const [openAction1, setOpenAction1] = React.useState(false);\n  const [selectedProjection, setSelectedProjection] = React.useState(null);\n  const [selectedAction, setSelectedAction] = React.useState(null);\n  const handleOpenAction1 = () => setOpenAction1(true);\n  const handleCloseAction1 = () => setOpenAction1(false);\n  const actions=[{\n    name:\"Token price variation\",\n      actionOpen:handleOpenAction1\n    },\n    {\n    name:\"Swap\",\n      actionOpen:handleOpenAction1\n    },\n    {\n    name:\"Stake\",\n      actionOpen:handleOpenAction1\n    },\n    {\n    name:\"Add token\",\n      actionOpen:handleOpenAction1\n    },\n    {\n    name:\"Withdraw token\",\n      actionOpen:handleOpenAction1\n    },\n    {\n    name:\"LP token(s)\",\n      actionOpen:handleOpenAction1\n    }\n  ]\n\n  return (\n    <> {\n        openAction1? <Action1 action={selectedAction} open={openAction1} projection={selectedProjection} handleClose={handleCloseAction1}/> : ''\n      }\n      \n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Name</TableCell>\n              <TableCell>Start Date</TableCell>\n              <TableCell>End Date</TableCell>\n              <TableCell>Options</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {projections.map((prj,index) => (\n              <Row key={index} projection={prj} setSelectedProjection={setSelectedProjection} setSelectedAction={setSelectedAction} actions={actions} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}