{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Modals/addProject.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { getCoins } from \"../../adapters/apis\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Stack from \"@mui/material/Stack\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport moment from \"moment\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport { ADD_Projection, EDIT_Projection } from \"../../redux/projections/projection.types\";\nimport Input from \"@mui/material/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 500,\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4\n};\nexport default function AddProjectModal(_ref) {\n  _s();\n\n  let {\n    open,\n    handleClose,\n    projectView,\n    projectionName\n  } = _ref;\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(null);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [showErr, setShowErr] = React.useState(false);\n  const [projection, setProjction] = React.useState(\"\");\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showQt, setShowQt] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [qt, setQt] = React.useState(0);\n  const [startDate, setStartDate] = React.useState(moment(new Date()));\n  const [endDate, setEndDate] = React.useState(moment(new Date()).add(1, \"M\"));\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  React.useEffect(() => {\n    console.log(projectionName, projectView);\n    setProjction(projectView.length !== 0 ? projectView[0].name : projectionName);\n    setSelectedCoins(projectView.length !== 0 ? projectView[0].coins : []);\n  }, [projectionName, projectView]);\n\n  const addCoins = () => {\n    selectedCoins.push({ ...currentCoin,\n      quantity: parseFloat(qt),\n      currentPrice: parseFloat(currentPrice)\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const deleteCoin = index => {\n    selectedCoins.splice(index, 1);\n    setSelectedCoins([...selectedCoins]);\n  };\n\n  const handelAfterAddQ = () => {\n    if (qt <= 0 || isNaN(qt)) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    if (currentPrice <= 0 || isNaN(currentPrice)) {\n      setErreur(\"Current Price must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    addCoins(qt);\n    setQt(0);\n    setCurrentPrice(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n\n  const addQuantity = value => {\n    const exist = selectedCoins.some(elem => elem.name === value.name);\n\n    if (exist) {\n      setErreur(\"Coin already added!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n  };\n\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n    if (!localCoins || JSON.parse(localCoins).length === 0) getCoins().then(res => {\n      setCoins(res.data);\n      localStorage.setItem(\"coins\", JSON.stringify(res.data));\n    });else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const handleQtChange = event => {\n    setQt(event.target.value);\n  };\n\n  const handleChangeTable = (event, index, who) => {\n    if (who === \"quantity\") selectedCoins[index].quantity = parseFloat(event.target.value);else selectedCoins[index].currentPrice = parseFloat(event.target.value);\n    setSelectedCoins(selectedCoins);\n  };\n\n  const handleCpChange = event => {\n    setCurrentPrice(event.target.value);\n  };\n\n  const handlePrjChange = event => {\n    setProjction(event.target.value);\n  };\n\n  const clearForm = () => {\n    setProjction(\"\");\n    setQt(0);\n    setSelectedCoins([]);\n    setCurrentPrice(0);\n    setValue(\"\");\n  };\n\n  const handleCloseModal = () => {\n    if (projectView.length === 0) clearForm();\n    handleClose();\n  };\n\n  const handleAddPrjoect = () => {\n    var _projectView$;\n\n    if (selectedCoins.length === 0) {\n      setErreur(\"You need to add coins!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    const project = {\n      id: (_projectView$ = projectView[0]) === null || _projectView$ === void 0 ? void 0 : _projectView$.id,\n      name: projection,\n      coins: selectedCoins,\n      startDate: startDate.toDate(),\n      endDate: endDate.toDate()\n    };\n    if (projectView.length !== 0) dispatch({\n      type: EDIT_Projection,\n      payload: project\n    });else dispatch({\n      type: ADD_Projection,\n      payload: project\n    });\n    handleCloseModal();\n  };\n\n  const handleStartDateChange = newValue => {\n    setStartDate(newValue);\n  };\n\n  const handleEndDateChange = newValue => {\n    if (newValue.toDate().getTime() < startDate.toDate().getTime()) {\n      setEndDate(endDate);\n      setErreur(\"The end date must be greater than the start date!\");\n      setShowErr(true);\n    } else {\n      setShowErr(false);\n      setErreur(\"\");\n      setEndDate(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        className: styles[\"modal\"],\n        children: [showErr ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"error\"],\n          children: erreur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 22\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: \"Configure your projection, by adding assets to your portfolio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: \"100%\"\n          },\n          label: \"Projection\",\n          value: projection,\n          onChange: handlePrjChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: DateAdapter,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: [\" \", /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"Start Date\",\n              inputFormat: \"DD-MM-YYYY\",\n              value: startDate,\n              onChange: handleStartDateChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"End Date\",\n              inputFormat: \"DD-MM-YYYY\",\n              value: endDate,\n              onChange: handleEndDateChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: value,\n          onChange: (event, newValue) => {\n            if (typeof newValue === \"string\") {\n              setValue({\n                name: newValue\n              });\n              addQuantity(newValue);\n            } else if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setValue({\n                name: newValue.inputValue\n              });\n              addQuantity({\n                name: newValue.inputValue,\n                symbol: \"\"\n              });\n            } else {\n              setValue(newValue);\n              if (newValue) addQuantity(newValue);\n            }\n          },\n          filterOptions: (options, params) => {\n            const {\n              inputValue\n            } = params;\n            if (inputValue.length === 0) return [];\n            const filtered = options.filter(item => item.name.toLowerCase().startsWith(inputValue) || item.symbol.toLowerCase().startsWith(inputValue)); // Suggest the creation of a new value\n\n            const isExisting = options.some(option => inputValue === option.name);\n\n            if (inputValue !== \"\" && !isExisting) {\n              filtered.push({\n                inputValue,\n                name: `Add \"${inputValue}\"`\n              });\n            }\n\n            return filtered;\n          },\n          selectOnFocus: true,\n          clearOnBlur: true,\n          handleHomeEndKeys: true,\n          id: \"free-solo-with-text-demo\",\n          options: coins,\n          getOptionLabel: option => {\n            if (typeof option === \"string\") {\n              return option;\n            }\n\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n\n            return option.name;\n          },\n          renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n            children: option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 46\n          }, this),\n          sx: {\n            width: \"100%\"\n          },\n          freeSolo: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Assets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), showQt ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"div-flex\"],\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"component-helper\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            defaultValue: qt,\n            placeholder: \"Amount\",\n            onChange: handleQtChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"component-helper\",\n            children: \"Current price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Current price\",\n            defaultValue: currentPrice,\n            onChange: handleCpChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handelAfterAddQ,\n            children: \"add coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this) : \"\", selectedCoins.length ? /*#__PURE__*/_jsxDEV(SelectedCoinsTable, {\n          coins: selectedCoins,\n          handleChangeTable: handleChangeTable,\n          deleteCoin: deleteCoin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"modal-footer\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAddPrjoect,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddProjectModal, \"CWFgqMymIJCk10q+pCHEQZBa6Hs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddProjectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProjectModal\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Modals/addProject.js"],"names":["React","Box","Button","Typography","Modal","styles","TextField","Autocomplete","SelectedCoinsTable","useDispatch","getCoins","InputLabel","Stack","DateAdapter","LocalizationProvider","moment","DesktopDatePicker","ADD_Projection","EDIT_Projection","Input","style","position","top","left","transform","width","height","overflowY","bgcolor","p","AddProjectModal","open","handleClose","projectView","projectionName","dispatch","value","setValue","useState","currentPrice","setCurrentPrice","currentCoin","setCurrentCoin","showErr","setShowErr","projection","setProjction","erreur","setErreur","showQt","setShowQt","coins","setCoins","qt","setQt","startDate","setStartDate","Date","endDate","setEndDate","add","selectedCoins","setSelectedCoins","useEffect","console","log","length","name","addCoins","push","quantity","parseFloat","deleteCoin","index","splice","handelAfterAddQ","isNaN","addQuantity","exist","some","elem","localCoins","localStorage","getItem","JSON","parse","then","res","data","setItem","stringify","handleQtChange","event","target","handleChangeTable","who","handleCpChange","handlePrjChange","clearForm","handleCloseModal","handleAddPrjoect","project","id","toDate","type","payload","handleStartDateChange","newValue","handleEndDateChange","getTime","mt","params","inputValue","symbol","options","filtered","filter","item","toLowerCase","startsWith","isExisting","option","props"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { getCoins } from \"../../adapters/apis\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Stack from \"@mui/material/Stack\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport moment from \"moment\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport {\n  ADD_Projection,\n  EDIT_Projection,\n} from \"../../redux/projections/projection.types\";\nimport Input from \"@mui/material/Input\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 500,\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4,\n};\n\nexport default function AddProjectModal({\n  open,\n  handleClose,\n  projectView,\n  projectionName,\n}) {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(null);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [showErr, setShowErr] = React.useState(false);\n  const [projection, setProjction] = React.useState(\"\");\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showQt, setShowQt] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [qt, setQt] = React.useState(0);\n  const [startDate, setStartDate] = React.useState(moment(new Date()));\n  const [endDate, setEndDate] = React.useState(moment(new Date()).add(1, \"M\"));\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  React.useEffect(() => {\n    console.log(projectionName, projectView);\n    setProjction(\n      projectView.length !== 0 ? projectView[0].name : projectionName\n    );\n    setSelectedCoins(projectView.length !== 0 ? projectView[0].coins : []);\n  }, [projectionName, projectView]);\n  const addCoins = () => {\n    selectedCoins.push({\n      ...currentCoin,\n      quantity: parseFloat(qt),\n      currentPrice: parseFloat(currentPrice),\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const deleteCoin = (index) => {\n    selectedCoins.splice(index, 1);\n    setSelectedCoins([...selectedCoins]);\n  };\n  const handelAfterAddQ = () => {\n    if (qt <= 0 || isNaN(qt)) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    if (currentPrice <= 0 || isNaN(currentPrice)) {\n      setErreur(\"Current Price must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    addCoins(qt);\n    setQt(0);\n    setCurrentPrice(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n  const addQuantity = (value) => {\n    const exist = selectedCoins.some((elem) => elem.name === value.name);\n    if (exist) {\n      setErreur(\"Coin already added!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n  };\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n\n    if (!localCoins || JSON.parse(localCoins).length === 0)\n      getCoins().then((res) => {\n        setCoins(res.data);\n        localStorage.setItem(\"coins\", JSON.stringify(res.data));\n      });\n    else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const handleQtChange = (event) => {\n    setQt(event.target.value);\n  };\n  const handleChangeTable = (event, index, who) => {\n    if (who === \"quantity\")\n      selectedCoins[index].quantity = parseFloat(event.target.value);\n    else selectedCoins[index].currentPrice = parseFloat(event.target.value);\n    setSelectedCoins(selectedCoins);\n  };\n  const handleCpChange = (event) => {\n    setCurrentPrice(event.target.value);\n  };\n  const handlePrjChange = (event) => {\n    setProjction(event.target.value);\n  };\n  const clearForm = () => {\n    setProjction(\"\");\n    setQt(0);\n    setSelectedCoins([]);\n    setCurrentPrice(0);\n    setValue(\"\");\n  };\n  const handleCloseModal = () => {\n    if (projectView.length === 0) clearForm();\n    handleClose();\n  };\n  const handleAddPrjoect = () => {\n    if (selectedCoins.length === 0) {\n      setErreur(\"You need to add coins!\");\n      setShowErr(true);\n      return;\n    }\n    setShowErr(false);\n    setErreur(\"\");\n    const project = {\n      id: projectView[0]?.id,\n      name: projection,\n      coins: selectedCoins,\n      startDate: startDate.toDate(),\n      endDate: endDate.toDate(),\n    };\n    if (projectView.length !== 0)\n      dispatch({ type: EDIT_Projection, payload: project });\n    else dispatch({ type: ADD_Projection, payload: project });\n    handleCloseModal();\n  };\n\n  const handleStartDateChange = (newValue) => {\n    setStartDate(newValue);\n  };\n  const handleEndDateChange = (newValue) => {\n    if (newValue.toDate().getTime() < startDate.toDate().getTime()) {\n      setEndDate(endDate);\n      setErreur(\"The end date must be greater than the start date!\");\n      setShowErr(true);\n    } else {\n      setShowErr(false);\n      setErreur(\"\");\n      setEndDate(newValue);\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style} className={styles[\"modal\"]}>\n          {showErr ? <p className={styles[\"error\"]}>{erreur}</p> : \"\"}\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Configure your projection, by adding assets to your portfolio:\n          </Typography>\n\n          <TextField\n            sx={{ width: \"100%\" }}\n            label=\"Projection\"\n            value={projection}\n            onChange={handlePrjChange}\n          />\n          <LocalizationProvider dateAdapter={DateAdapter}>\n            <Stack spacing={3}>\n              {\" \"}\n              <DesktopDatePicker\n                label=\"Start Date\"\n                inputFormat=\"DD-MM-YYYY\"\n                value={startDate}\n                onChange={handleStartDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              <DesktopDatePicker\n                label=\"End Date\"\n                inputFormat=\"DD-MM-YYYY\"\n                value={endDate}\n                onChange={handleEndDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </Stack>\n          </LocalizationProvider>\n          <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n              if (typeof newValue === \"string\") {\n                setValue({\n                  name: newValue,\n                });\n                addQuantity(newValue);\n              } else if (newValue && newValue.inputValue) {\n                // Create a new value from the user input\n                setValue({\n                  name: newValue.inputValue,\n                });\n                addQuantity({ name: newValue.inputValue, symbol: \"\" });\n              } else {\n                setValue(newValue);\n                if (newValue) addQuantity(newValue);\n              }\n            }}\n            filterOptions={(options, params) => {\n              const { inputValue } = params;\n              if (inputValue.length === 0) return [];\n              const filtered = options.filter(\n                (item) =>\n                  item.name.toLowerCase().startsWith(inputValue) ||\n                  item.symbol.toLowerCase().startsWith(inputValue)\n              );\n\n              // Suggest the creation of a new value\n              const isExisting = options.some(\n                (option) => inputValue === option.name\n              );\n              if (inputValue !== \"\" && !isExisting) {\n                filtered.push({\n                  inputValue,\n                  name: `Add \"${inputValue}\"`,\n                });\n              }\n\n              return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={coins}\n            getOptionLabel={(option) => {\n              if (typeof option === \"string\") {\n                return option;\n              }\n              if (option.inputValue) {\n                return option.inputValue;\n              }\n              return option.name;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.name}</li>}\n            sx={{ width: \"100%\" }}\n            freeSolo\n            renderInput={(params) => <TextField {...params} label=\"Assets\" />}\n          />\n          {showQt ? (\n            <div className={styles[\"div-flex\"]}>\n              <InputLabel htmlFor=\"component-helper\">Amount</InputLabel>\n\n              <Input\n                type=\"number\"\n                defaultValue={qt}\n                placeholder=\"Amount\"\n                onChange={handleQtChange}\n              />\n              <InputLabel htmlFor=\"component-helper\">Current price</InputLabel>\n\n              <Input\n                type=\"number\"\n                placeholder=\"Current price\"\n                defaultValue={currentPrice}\n                onChange={handleCpChange}\n              />\n\n              <Button variant=\"contained\" onClick={handelAfterAddQ}>\n                add coin\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {selectedCoins.length ? (\n            <SelectedCoinsTable\n              coins={selectedCoins}\n              handleChangeTable={handleChangeTable}\n              deleteCoin={deleteCoin}\n            />\n          ) : (\n            \"\"\n          )}\n\n          <div className={styles[\"modal-footer\"]}>\n            <Button variant=\"contained\" onClick={handleAddPrjoect}>\n              Save Changes\n            </Button>\n            <Button variant=\"outlined\" onClick={handleCloseModal}>\n              Close\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}