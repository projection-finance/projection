{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Modals/add_Edit_Project.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { useDispatch } from \"react-redux\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport moment from \"moment\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport xSvg from \"./../../assets/images/x.svg\";\nimport { ADD_Projection, EDIT_Projection } from \"../../redux/projections/projection.types\";\nimport SelectAssets from \"./selectAssets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"50%\",\n  height: \"60%\",\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4,\n  margin: \"0 20px\"\n};\nexport default function Add_Edit_ProjectModal(_ref) {\n  _s();\n\n  let {\n    afterSave,\n    open,\n    handleClose,\n    projectEdit,\n    projectionName\n  } = _ref;\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(null);\n  const [projection, setProjction] = React.useState(\"\");\n  const [showErr, setShowErr] = React.useState(false);\n  const [erreur, setErreur] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState(moment(new Date()));\n  const [endDate, setEndDate] = React.useState(moment(new Date()).add(1, \"M\"));\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  React.useEffect(() => {\n    setProjction(projectEdit ? projectEdit.name : projectionName);\n    setSelectedCoins(projectEdit ? projectEdit.coins : []);\n  }, [projectionName, projectEdit]);\n\n  const deleteCoin = index => {\n    if (window.confirm(\"Are you sure!\")) {\n      selectedCoins.splice(index, 1);\n      setSelectedCoins([...selectedCoins]);\n    }\n  };\n\n  const handleChangeTable = (val, index, who) => {\n    if (who === \"quantity\") selectedCoins[index].quantity = parseFloat(val);else selectedCoins[index].currentPrice = parseFloat(val);\n    setSelectedCoins(selectedCoins);\n  };\n\n  const handlePrjChange = event => {\n    setProjction(event.target.value);\n  };\n\n  const clearForm = () => {\n    setProjction(\"\");\n    setSelectedCoins([]);\n    setValue(\"\");\n  };\n\n  const handleCloseModal = () => {\n    if (projectEdit) clearForm();\n    handleClose();\n  };\n\n  const handleAddPrjoect = () => {\n    if (selectedCoins.length === 0) {\n      setErreur(\"You need to add coins!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    const project = { ...projectEdit,\n      ...{\n        id: projectEdit ? projectEdit.id : Math.random(),\n        name: projection,\n        coins: selectedCoins,\n        startDate: startDate.toDate(),\n        endDate: endDate.toDate()\n      }\n    };\n\n    if (projectEdit) {\n      projectEdit = { ...projectEdit,\n        ...project\n      };\n      dispatch({\n        type: EDIT_Projection,\n        payload: projectEdit\n      });\n    } else dispatch({\n      type: ADD_Projection,\n      payload: project\n    });\n\n    afterSave(project);\n    handleCloseModal();\n  };\n\n  const handleStartDateChange = newValue => {\n    setStartDate(newValue);\n  };\n\n  const handleEndDateChange = newValue => {\n    if (newValue.toDate().getTime() < startDate.toDate().getTime()) {\n      setEndDate(endDate);\n      setErreur(\"The end date must be greater than the start date!\");\n      setShowErr(true);\n    } else {\n      setShowErr(false);\n      setErreur(\"\");\n      setEndDate(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        className: styles[\"modal\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: xSvg,\n          onClick: handleClose,\n          className: styles[\"xSvg\"],\n          alt: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), showErr ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"error\"],\n          children: erreur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 22\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: DateAdapter,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"flex-row\"],\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: styles[\"flex-row-textfield\"],\n              label: \"Projection\",\n              value: projection,\n              onChange: handlePrjChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"Start Date\",\n              inputFormat: \"DD-MM-YYYY\",\n              value: startDate,\n              onChange: handleStartDateChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"End Date\",\n              inputFormat: \"DD-MM-YYYY\",\n              value: endDate,\n              onChange: handleEndDateChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          className: styles[\"modal-modal-description\"],\n          children: \"Configure your projection, by adding assets to your portfolio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectAssets, {\n          setSelectedCoins: setSelectedCoins,\n          value: value,\n          selectedCoins: selectedCoins,\n          setErreur: setErreur,\n          setValue: setValue,\n          setShowErr: setShowErr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), selectedCoins.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your portfolio \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SelectedCoinsTable, {\n            coins: [...selectedCoins],\n            handleChangeTable: handleChangeTable,\n            deleteCoin: deleteCoin,\n            canEdit: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"modal-footer\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAddPrjoect,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Add_Edit_ProjectModal, \"d1fs0QE9B7UJLMUqXsyKxRA1mV4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Add_Edit_ProjectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add_Edit_ProjectModal\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Modals/add_Edit_Project.js"],"names":["React","Box","Button","Typography","Modal","styles","TextField","SelectedCoinsTable","useDispatch","DateAdapter","LocalizationProvider","moment","DesktopDatePicker","xSvg","ADD_Projection","EDIT_Projection","SelectAssets","style","position","top","left","transform","width","height","overflowY","bgcolor","p","margin","Add_Edit_ProjectModal","afterSave","open","handleClose","projectEdit","projectionName","dispatch","value","setValue","useState","projection","setProjction","showErr","setShowErr","erreur","setErreur","startDate","setStartDate","Date","endDate","setEndDate","add","selectedCoins","setSelectedCoins","useEffect","name","coins","deleteCoin","index","window","confirm","splice","handleChangeTable","val","who","quantity","parseFloat","currentPrice","handlePrjChange","event","target","clearForm","handleCloseModal","handleAddPrjoect","length","project","id","Math","random","toDate","type","payload","handleStartDateChange","newValue","handleEndDateChange","getTime","params"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { useDispatch } from \"react-redux\";\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport moment from \"moment\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport xSvg from \"./../../assets/images/x.svg\";\nimport {\n  ADD_Projection,\n  EDIT_Projection,\n} from \"../../redux/projections/projection.types\";\nimport SelectAssets from \"./selectAssets\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"50%\",\n  height: \"60%\",\n  overflowY: \"scroll\",\n  bgcolor: \"background.paper\",\n  p: 4,\n  margin: \"0 20px\",\n};\n\nexport default function Add_Edit_ProjectModal({\n  afterSave,\n  open,\n  handleClose,\n  projectEdit,\n  projectionName\n}) {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(null);\n  const [projection, setProjction] = React.useState(\"\");\n  const [showErr, setShowErr] = React.useState(false);\n  const [erreur, setErreur] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState(moment(new Date()));\n  const [endDate, setEndDate] = React.useState(moment(new Date()).add(1, \"M\"));\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  React.useEffect(() => {\n    setProjction(\n      projectEdit ? projectEdit.name : projectionName\n    );\n    setSelectedCoins(projectEdit ? projectEdit.coins : []);\n  }, [projectionName, projectEdit]);\n\n  const deleteCoin = (index) => {\n    if (window.confirm(\"Are you sure!\")) {\n      selectedCoins.splice(index, 1);\n      setSelectedCoins([...selectedCoins]);\n    }\n  };\n  const handleChangeTable = (val, index, who) => {\n    if (who === \"quantity\") selectedCoins[index].quantity = parseFloat(val);\n    else selectedCoins[index].currentPrice = parseFloat(val);\n    setSelectedCoins(selectedCoins);\n  };\n  const handlePrjChange = (event) => {\n    setProjction(event.target.value);\n  };\n  const clearForm = () => {\n    setProjction(\"\");\n    setSelectedCoins([]);\n    setValue(\"\");\n  };\n  const handleCloseModal = () => {\n    if (projectEdit ) clearForm();\n    handleClose();\n  };\n  const handleAddPrjoect = () => {\n    if (selectedCoins.length === 0) {\n      setErreur(\"You need to add coins!\");\n      setShowErr(true);\n      return;\n    }\n    setShowErr(false);\n    setErreur(\"\");\n    const project = {...projectEdit,...{\n      id: projectEdit ?projectEdit.id : Math.random(),\n      name: projection,\n      coins: selectedCoins,\n      startDate: startDate.toDate(),\n      endDate: endDate.toDate(),\n    }};\n    if (projectEdit) {\n      projectEdit = { ...projectEdit, ...project };\n      dispatch({ type: EDIT_Projection, payload: projectEdit });\n    } else dispatch({ type: ADD_Projection, payload: project });\n    afterSave(project)\n    handleCloseModal();\n  };\n\n  const handleStartDateChange = (newValue) => {\n    setStartDate(newValue);\n  };\n  const handleEndDateChange = (newValue) => {\n    if (newValue.toDate().getTime() < startDate.toDate().getTime()) {\n      setEndDate(endDate);\n      setErreur(\"The end date must be greater than the start date!\");\n      setShowErr(true);\n    } else {\n      setShowErr(false);\n      setErreur(\"\");\n      setEndDate(newValue);\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style} className={styles[\"modal\"]}>\n          <img\n            src={xSvg}\n            onClick={handleClose}\n            className={styles[\"xSvg\"]}\n            alt=\"x\"\n          />\n          {showErr ? <p className={styles[\"error\"]}>{erreur}</p> : \"\"}\n\n          <LocalizationProvider dateAdapter={DateAdapter}>\n            <div className={styles[\"flex-row\"]}>\n              <TextField\n                className={styles[\"flex-row-textfield\"]}\n                label=\"Projection\"\n                value={projection}\n                onChange={handlePrjChange}\n              />\n              <DesktopDatePicker\n                label=\"Start Date\"\n                inputFormat=\"DD-MM-YYYY\"\n                value={startDate}\n                onChange={handleStartDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              <DesktopDatePicker\n                label=\"End Date\"\n                inputFormat=\"DD-MM-YYYY\"\n                value={endDate}\n                onChange={handleEndDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </div>\n          </LocalizationProvider>\n          <Typography\n            id=\"modal-modal-description\"\n            className={styles[\"modal-modal-description\"]}\n          >\n            Configure your projection, by adding assets to your portfolio:\n          </Typography>\n          <SelectAssets\n            setSelectedCoins={setSelectedCoins}\n            value={value}\n            selectedCoins={selectedCoins}\n            setErreur={setErreur}\n            setValue={setValue}\n            setShowErr={setShowErr}\n          />\n\n          {selectedCoins.length ? (\n            <>\n              <p>Your portfolio </p>\n              <SelectedCoinsTable\n                coins={[...selectedCoins]}\n                handleChangeTable={handleChangeTable}\n                deleteCoin={deleteCoin}\n                canEdit={true}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div className={styles[\"modal-footer\"]} >\n            <Button variant=\"contained\" onClick={handleAddPrjoect}>\n              Save Changes\n            </Button>\n            <Button variant=\"outlined\" onClick={handleCloseModal}>\n              Close\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}