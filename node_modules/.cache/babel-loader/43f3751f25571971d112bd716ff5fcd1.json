{"ast":null,"code":"import { ADD_Projection } from \"./prjoection.types\";\nconst INITIAL_STATE = {\n  projections: JSON.parse(localStorage.getItem(\"projections\")) || []\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_Projection:\n      return { ...state,\n        projections: [...state.projections, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/redux/projections/projection.reducer.js"],"names":["ADD_Projection","INITIAL_STATE","projections","JSON","parse","localStorage","getItem","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD;AAD5C,CAAtB;;AAIA,MAAMC,OAAO,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BP,aAA0B;AAAA,MAAXQ,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELN,QAAAA,WAAW,EAAE,CAAC,GAAGM,KAAK,CAACN,WAAV,EAAuBO,MAAM,CAACE,OAA9B;AAFR,OAAP;;AAKF;AACE,aAAOH,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["import { ADD_Projection } from \"./prjoection.types\";\n\nconst INITIAL_STATE = {\n  projections: JSON.parse(localStorage.getItem(\"projections\")) || [],\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_Projection:\n      return {\n        ...state,\n        projections: [...state.projections, action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}