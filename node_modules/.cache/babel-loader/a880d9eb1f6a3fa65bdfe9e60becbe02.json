{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Modals/addProject.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { getCoins } from \"../../adapters/apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  p: 4\n};\nconst date = new Date();\nexport default function AddProjectModal() {\n  _s();\n\n  const [value, setValue] = React.useState(null);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [showErr, setShowErr] = React.useState(false);\n  const [projection, setProjection] = React.useState(`projection_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`);\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showQt, setShowQt] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [qt, setQt] = React.useState(0);\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n\n  const addCoins = () => {\n    selectedCoins.push({ ...currentCoin,\n      quantity: qt\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const deleteCoin = index => {\n    selectedCoins.splice(index, 1);\n    setSelectedCoins([...selectedCoins]);\n  };\n\n  const handelAfterAddQ = () => {\n    if (qt <= 0) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    addCoins(qt);\n    setQt(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n\n  const addQuantity = value => {\n    const exist = selectedCoins.some(elem => elem.name == value.name);\n\n    if (exist) {\n      setErreur(\"Coin already added!!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n  };\n\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n    if (!localCoins || JSON.parse(localCoins).length == 0) getCoins().then(res => {\n      setCoins(res.data);\n      localStorage.setItem(\"coins\", JSON.stringify(res.data));\n    });else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const handleQtChange = event => {\n    setQt(event.target.value);\n  };\n\n  const handlePrjChange = event => {\n    setProjection(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleOpen,\n      className: styles[\"btnCenter\"],\n      children: \"New Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        className: styles[\"modal\"],\n        children: [showErr ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"error\"],\n          children: erreur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: \"Configure your projection, by adding assets to your portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: 300\n          },\n          label: \"Prjoection\",\n          value: projection,\n          onChange: handlePrjChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: value,\n          onChange: (event, newValue) => {\n            if (typeof newValue === \"string\") {\n              setValue({\n                name: newValue\n              });\n              addQuantity(newValue);\n            } else if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setValue({\n                name: newValue.inputValue\n              });\n              addQuantity({\n                name: newValue.inputValue,\n                symbol: \"\"\n              });\n            } else {\n              setValue(newValue);\n              if (newValue) addQuantity(newValue);\n            }\n          },\n          filterOptions: (options, params) => {\n            const {\n              inputValue\n            } = params;\n            if (inputValue.length == 0) return [];\n            const filtered = options.filter(item => item.name.toLowerCase().startsWith(inputValue) || item.symbol.toLowerCase().startsWith(inputValue)); // Suggest the creation of a new value\n\n            const isExisting = options.some(option => inputValue === option.name);\n\n            if (inputValue !== \"\" && !isExisting) {\n              filtered.push({\n                inputValue,\n                name: `Add \"${inputValue}\"`\n              });\n            }\n\n            return filtered;\n          },\n          selectOnFocus: true,\n          clearOnBlur: true,\n          handleHomeEndKeys: true,\n          id: \"free-solo-with-text-demo\",\n          options: coins,\n          getOptionLabel: option => {\n            if (typeof option === \"string\") {\n              return option;\n            }\n\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n\n            return option.name;\n          },\n          renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n            children: option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 46\n          }, this),\n          sx: {\n            width: 300\n          },\n          freeSolo: true,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Assets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), showQt ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"div-flex\"],\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"amount\",\n            value: qt,\n            onChange: handleQtChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handelAfterAddQ,\n            children: \"add coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : \"\", selectedCoins.length ? /*#__PURE__*/_jsxDEV(SelectedCoinsTable, {\n          coins: selectedCoins,\n          deleteCoin: deleteCoin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"modal-footer\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddProjectModal, \"/udbGXfWTKqMPq8Uz1P88wth/aw=\");\n\n_c = AddProjectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProjectModal\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Modals/addProject.js"],"names":["React","Box","Button","Typography","Modal","styles","TextField","Autocomplete","createFilterOptions","SelectedCoinsTable","getCoins","style","position","top","left","transform","width","bgcolor","p","date","Date","AddProjectModal","value","setValue","useState","currentCoin","setCurrentCoin","showErr","setShowErr","projection","setProjection","getDate","getMonth","getFullYear","getHours","getMinutes","erreur","setErreur","showQt","setShowQt","open","setOpen","coins","setCoins","qt","setQt","selectedCoins","setSelectedCoins","addCoins","push","quantity","deleteCoin","index","splice","handelAfterAddQ","addQuantity","exist","some","elem","name","useEffect","localCoins","localStorage","getItem","JSON","parse","length","then","res","data","setItem","stringify","handleOpen","handleClose","handleQtChange","event","target","handlePrjChange","mt","newValue","inputValue","symbol","options","params","filtered","filter","item","toLowerCase","startsWith","isExisting","option","props"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport styles from \"./addProject.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport SelectedCoinsTable from \"./selectedCoinsTable\";\nimport { getCoins } from \"../../adapters/apis\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  p: 4,\n};\nconst date = new Date();\n\nexport default function AddProjectModal() {\n  const [value, setValue] = React.useState(null);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [showErr, setShowErr] = React.useState(false);\n  const [projection, setProjection] = React.useState(\n    `projection_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`\n  );\n  const [erreur, setErreur] = React.useState(\"\");\n  const [showQt, setShowQt] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [qt, setQt] = React.useState(0);\n  const [selectedCoins, setSelectedCoins] = React.useState([]);\n  const addCoins = () => {\n    selectedCoins.push({ ...currentCoin, quantity: qt });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const deleteCoin = (index) => {\n    selectedCoins.splice(index, 1);\n    setSelectedCoins([...selectedCoins]);\n  };\n  const handelAfterAddQ = () => {\n    if(qt<=0){\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    addCoins(qt);\n    setQt(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n  const addQuantity = (value) => {\n    const exist = selectedCoins.some((elem) => elem.name == value.name);\n    if (exist) {\n      setErreur(\"Coin already added!!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n  };\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n\n    if (!localCoins || JSON.parse(localCoins).length == 0)\n      getCoins().then((res) => {\n        setCoins(res.data);\n        localStorage.setItem(\"coins\", JSON.stringify(res.data));\n      });\n    else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleQtChange = (event) => {\n    setQt(event.target.value);\n  };\n  const handlePrjChange = (event) => {\n    setProjection(event.target.value);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        onClick={handleOpen}\n        className={styles[\"btnCenter\"]}\n      >\n        New Projects\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style} className={styles[\"modal\"]}>\n          {showErr ? <p className={styles[\"error\"]}>{erreur}</p> : \"\"}\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Configure your projection, by adding assets to your portfolio\n          </Typography>\n\n          <TextField\n            sx={{ width: 300 }}\n            label=\"Prjoection\"\n            value={projection}\n            onChange={handlePrjChange}\n          />\n          <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n              if (typeof newValue === \"string\") {\n                setValue({\n                  name: newValue,\n                });\n                addQuantity(newValue);\n              } else if (newValue && newValue.inputValue) {\n                // Create a new value from the user input\n                setValue({\n                  name: newValue.inputValue,\n                });\n                addQuantity({ name: newValue.inputValue, symbol: \"\" });\n              } else {\n                setValue(newValue);\n                if (newValue) addQuantity(newValue);\n              }\n            }}\n            filterOptions={(options, params) => {\n              const { inputValue } = params;\n              if (inputValue.length == 0) return [];\n              const filtered = options.filter(\n                (item) =>\n                  item.name.toLowerCase().startsWith(inputValue) ||\n                  item.symbol.toLowerCase().startsWith(inputValue)\n              );\n\n              // Suggest the creation of a new value\n              const isExisting = options.some(\n                (option) => inputValue === option.name\n              );\n              if (inputValue !== \"\" && !isExisting) {\n                filtered.push({\n                  inputValue,\n                  name: `Add \"${inputValue}\"`,\n                });\n              }\n\n              return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={coins}\n            getOptionLabel={(option) => {\n              if (typeof option === \"string\") {\n                return option;\n              }\n              if (option.inputValue) {\n                return option.inputValue;\n              }\n              return option.name;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.name}</li>}\n            sx={{ width: 300 }}\n            freeSolo\n            renderInput={(params) => <TextField {...params} label=\"Assets\" />}\n          />\n          {showQt ? (\n            <div className={styles[\"div-flex\"]}>\n              <TextField\n                label=\"amount\"\n                value={qt}\n                onChange={handleQtChange}\n              />\n\n              <Button variant=\"contained\" onClick={handelAfterAddQ}>\n                add coin\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {selectedCoins.length ? (\n            <SelectedCoinsTable coins={selectedCoins} deleteCoin={deleteCoin} />\n          ) : (\n            \"\"\n          )}\n\n          <div className={styles[\"modal-footer\"]}>\n            <Button variant=\"contained\">Save Changes</Button>\n            <Button variant=\"outlined\" onClick={handleClose}>\n              Close\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}