{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/projection/listActions.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport moment from \"moment\";\nimport { EDIT_ACTION_TO_Projection, DELETE_ACTION_TO_Projection } from \"../../redux/projections/projection.types\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalEdit() {}\n\n_c = ModalEdit;\n\nfunction CardItem(_ref) {\n  _s();\n\n  let {\n    action,\n    projection\n  } = _ref;\n  const dispatch = useDispatch();\n  const sign = action.price - action.coin.currentPrice >= 0 ? \"+\" : \"-\";\n  const getVariation = Math.abs(action.price - action.coin.currentPrice) / action.coin.currentPrice * 100;\n\n  const deleteAction = () => {\n    if (window.confirm(\"Are you sure ?\")) dispatch({\n      type: DELETE_ACTION_TO_Projection,\n      payload: {\n        action,\n        projection\n      }\n    });\n  };\n\n  const editAction = () => {};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: [\"$\", action.coin.symbol, \"/Price variation\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 1.5\n        },\n        color: \"text.secondary\",\n        children: moment(action.date).format(\"DD MMMM YYYY\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"New Price : \", action.price, \"$(\", sign, getVariation, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: editAction,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: deleteAction,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = CardItem;\nexport default function ListActions(_ref2) {\n  let {\n    projections\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: projections.map((prj, index) => {\n      var _prj$actions;\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: ((_prj$actions = prj.actions) === null || _prj$actions === void 0 ? void 0 : _prj$actions.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            sx: {\n              margin: \"20px auto\"\n            },\n            children: [\"Projection : \", prj.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 275,\n              margin: \"20px auto\",\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: prj.actions.map((act, index) => {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  width: \"fit-content\"\n                },\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CardItem, {\n                  action: act,\n                  projection: prj\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : \"\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n_c3 = ListActions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ModalEdit\");\n$RefreshReg$(_c2, \"CardItem\");\n$RefreshReg$(_c3, \"ListActions\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/projection/listActions.js"],"names":["React","Box","Card","CardActions","CardContent","Button","Typography","moment","EDIT_ACTION_TO_Projection","DELETE_ACTION_TO_Projection","useDispatch","ModalEdit","CardItem","action","projection","dispatch","sign","price","coin","currentPrice","getVariation","Math","abs","deleteAction","window","confirm","type","payload","editAction","symbol","mb","date","format","ListActions","projections","map","prj","index","actions","length","margin","name","minWidth","display","justifyContent","act","width"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport moment from \"moment\";\nimport {\n  EDIT_ACTION_TO_Projection,\n  DELETE_ACTION_TO_Projection,\n} from \"../../redux/projections/projection.types\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ModalEdit() {}\n\nfunction CardItem({ action, projection }) {\n  const dispatch = useDispatch();\n  const sign = action.price - action.coin.currentPrice >= 0 ? \"+\" : \"-\";\n  const getVariation =\n    (Math.abs(action.price - action.coin.currentPrice) /\n      action.coin.currentPrice) *\n    100;\n  const deleteAction = () => {\n    if (window.confirm(\"Are you sure ?\"))\n      dispatch({\n        type: DELETE_ACTION_TO_Projection,\n        payload: { action, projection },\n      });\n  };\n  const editAction = () => {};\n\n  return (\n    <React.Fragment>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\">\n          ${action.coin.symbol}/Price variation\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {moment(action.date).format(\"DD MMMM YYYY\")}\n        </Typography>\n        <Typography variant=\"body2\">\n          New Price : {action.price}$({sign}\n          {getVariation}%)\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" onClick={editAction}>\n          Edit\n        </Button>\n        <Button variant=\"contained\" onClick={deleteAction}>\n          Delete\n        </Button>\n      </CardActions>\n    </React.Fragment>\n  );\n}\n\nexport default function ListActions({ projections }) {\n  return (\n    <>\n      {projections.map((prj, index) => {\n        return (\n          <React.Fragment key={index}>\n            {prj.actions?.length > 0 ? (\n              <>\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  sx={{ margin: \"20px auto\" }}\n                >\n                  Projection : {prj.name}\n                </Typography>\n                <Box\n                  sx={{\n                    minWidth: 275,\n                    margin: \"20px auto\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {prj.actions.map((act, index) => {\n                    return (\n                      <Card\n                        sx={{ width: \"fit-content\" }}\n                        key={index}\n                        variant=\"outlined\"\n                      >\n                        <CardItem action={act} projection={prj} />\n                      </Card>\n                    );\n                  })}\n                </Box>\n              </>\n            ) : (\n              \"\"\n            )}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}