{"ast":null,"code":"var _jsxFileName = \"/Users/max/Documents/GitHub/Projection/src/components/Modals/selectAssets.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport { getCoins } from \"../../adapters/apis\";\nimport TextField from \"@mui/material/TextField\";\nimport styles from \"./selectAssets.module.css\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport DeleteSvg from \"../../assets/images/Union.svg\";\nimport EditSvg from \"../../assets/images/Subtract.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: \"#fff\",\n      color: \"#000\"\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14\n    }\n  };\n});\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#F8F9FA\"\n    }\n  };\n});\n_c2 = StyledTableRow;\n\nfunction AssetsTable(_ref3) {\n  let {\n    coins\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    sx: {\n      borderRadius: 0,\n      boxShadow: \"none\"\n    },\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            sx: {\n              border: 0,\n              fontWeight: 700,\n              fontSize: \"16px\"\n            },\n            children: \"Assets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: coins.map((coin, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            sx: {\n              border: 0\n            },\n            component: \"th\",\n            scope: \"row\",\n            children: [\"+ \", coin.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = AssetsTable;\nexport default function SelectAssets(_ref4) {\n  _s();\n\n  let {\n    setSelectedCoins,\n    value,\n    selectedCoins,\n    setValue,\n    setErreur,\n    setShowErr\n  } = _ref4;\n  const rx_live = /^\\d+(?:[.,]{1}\\d*)?$/;\n  const [showQt, setShowQt] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n  const [qt, setQt] = React.useState(0);\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n    if (!localCoins || JSON.parse(localCoins).length === 0) getCoins().then(res => {\n      setCoins(res.data);\n      localStorage.setItem(\"coins\", JSON.stringify(res.data));\n    });else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const addQuantity = value => {\n    const exist = selectedCoins.some(elem => elem.name === value.name);\n\n    if (exist) {\n      setErreur(\"Coin already added!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n    setQt(0);\n    setCurrentPrice(0);\n  };\n\n  const handleQtChange = event => {\n    let val = event.target.value;\n    val = val.replace(\",\", \".\");\n    if (rx_live.test(val)) setQt(val);\n  };\n\n  const handleCpChange = event => {\n    let val = event.target.value;\n    val = val.replace(\",\", \".\");\n    if (rx_live.test(val)) setCurrentPrice(val);\n  };\n\n  const addCoins = () => {\n    selectedCoins.push({ ...currentCoin,\n      quantity: parseFloat(qt),\n      currentPrice: parseFloat(currentPrice)\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n\n  const handelAfterAddQ = () => {\n    if (qt <= 0 || isNaN(qt)) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    if (currentPrice <= 0 || isNaN(currentPrice)) {\n      setErreur(\"Current Price must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n\n    addCoins(qt);\n    setQt(0);\n    setCurrentPrice(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: (event, newValue) => {\n        if (typeof newValue === \"string\") {\n          setValue({\n            name: newValue\n          });\n          addQuantity(newValue);\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            name: newValue.inputValue\n          });\n          addQuantity({\n            name: newValue.inputValue,\n            symbol: \"\"\n          });\n        } else {\n          setValue(newValue);\n          if (newValue) addQuantity(newValue);\n        }\n      },\n      filterOptions: (options, params) => {\n        const {\n          inputValue\n        } = params;\n        if (inputValue.length === 0) return [];\n        const filtered = options.filter(item => item.name.toLowerCase().startsWith(inputValue) || item.symbol.toLowerCase().startsWith(inputValue)); // Suggest the creation of a new value\n\n        const isExisting = options.some(option => inputValue === option.name);\n\n        if (inputValue !== \"\" && !isExisting) {\n          filtered.push({\n            inputValue,\n            name: `Add \"${inputValue}\"`\n          });\n        }\n\n        return filtered;\n      },\n      selectOnFocus: true,\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      id: \"free-solo-with-text-demo\",\n      options: coins,\n      getOptionLabel: option => {\n        if (typeof option === \"string\") {\n          return option;\n        }\n\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n\n        return option.name;\n      },\n      renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n        children: option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 42\n      }, this),\n      sx: {\n        width: \"100%\"\n      },\n      freeSolo: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), showQt ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"div-flex\"],\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"component-helper\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: qt,\n        placeholder: \"Amount\",\n        onChange: handleQtChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"component-helper\",\n        children: \"Current price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Current price\",\n        value: currentPrice,\n        onChange: handleCpChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handelAfterAddQ,\n        children: \"add coin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this) : \"\", selectedCoins.length ? /*#__PURE__*/_jsxDEV(AssetsTable, {\n      coins: selectedCoins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 32\n    }, this) : \"\"]\n  }, void 0, true);\n}\n\n_s(SelectAssets, \"BXGO45banqBPEtE7uwE/DBRQOA4=\");\n\n_c4 = SelectAssets;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"StyledTableRow\");\n$RefreshReg$(_c3, \"AssetsTable\");\n$RefreshReg$(_c4, \"SelectAssets\");","map":{"version":3,"sources":["/Users/max/Documents/GitHub/Projection/src/components/Modals/selectAssets.js"],"names":["React","Autocomplete","InputLabel","Button","Input","getCoins","TextField","styles","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","DeleteSvg","EditSvg","StyledTableCell","theme","head","backgroundColor","color","body","fontSize","StyledTableRow","AssetsTable","coins","borderRadius","boxShadow","border","fontWeight","map","coin","index","symbol","SelectAssets","setSelectedCoins","value","selectedCoins","setValue","setErreur","setShowErr","rx_live","showQt","setShowQt","useState","setCoins","currentCoin","setCurrentCoin","currentPrice","setCurrentPrice","qt","setQt","useEffect","localCoins","localStorage","getItem","JSON","parse","length","then","res","data","setItem","stringify","addQuantity","exist","some","elem","name","handleQtChange","event","val","target","replace","test","handleCpChange","addCoins","push","quantity","parseFloat","handelAfterAddQ","isNaN","newValue","inputValue","options","params","filtered","filter","item","toLowerCase","startsWith","isExisting","option","props","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport { getCoins } from \"../../adapters/apis\";\nimport TextField from \"@mui/material/TextField\";\nimport styles from \"./selectAssets.module.css\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport DeleteSvg from \"../../assets/images/Union.svg\";\nimport EditSvg from \"../../assets/images/Subtract.svg\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"#F8F9FA\",\n  },\n}));\n\nfunction AssetsTable({ coins }) {\n  return (\n    <TableContainer\n      sx={{ borderRadius: 0, boxShadow: \"none\" }}\n      component={Paper}\n    >\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              sx={{ border: 0, fontWeight: 700, fontSize: \"16px\" }}\n            >\n              Assets\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {coins.map((coin, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell sx={{ border: 0 }} component=\"th\" scope=\"row\">\n                + {coin.symbol}\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default function SelectAssets({\n  setSelectedCoins,\n  value,\n  selectedCoins,\n  setValue,\n  setErreur,\n  setShowErr,\n}) {\n  const rx_live = /^\\d+(?:[.,]{1}\\d*)?$/;\n  const [showQt, setShowQt] = React.useState(false);\n  const [coins, setCoins] = React.useState([]);\n  const [currentCoin, setCurrentCoin] = React.useState(null);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n  const [qt, setQt] = React.useState(0);\n\n  React.useEffect(() => {\n    const localCoins = localStorage.getItem(\"coins\");\n\n    if (!localCoins || JSON.parse(localCoins).length === 0)\n      getCoins().then((res) => {\n        setCoins(res.data);\n        localStorage.setItem(\"coins\", JSON.stringify(res.data));\n      });\n    else setCoins(JSON.parse(localCoins));\n  }, []);\n\n  const addQuantity = (value) => {\n    const exist = selectedCoins.some((elem) => elem.name === value.name);\n    if (exist) {\n      setErreur(\"Coin already added!\");\n      setShowErr(true);\n      return;\n    }\n\n    setShowErr(false);\n    setErreur(\"\");\n    setCurrentCoin(value);\n    setShowQt(true);\n    setQt(0);\n    setCurrentPrice(0);\n  };\n\n  const handleQtChange = (event) => {\n    let val = event.target.value;\n    val = val.replace(\",\", \".\");\n    if (rx_live.test(val)) setQt(val);\n  };\n  const handleCpChange = (event) => {\n    let val = event.target.value;\n    val = val.replace(\",\", \".\");\n    if (rx_live.test(val)) setCurrentPrice(val);\n  };\n\n  const addCoins = () => {\n    selectedCoins.push({\n      ...currentCoin,\n      quantity: parseFloat(qt),\n      currentPrice: parseFloat(currentPrice),\n    });\n    setSelectedCoins(selectedCoins);\n    setCurrentCoin(null);\n    setValue(null);\n  };\n  const handelAfterAddQ = () => {\n    if (qt <= 0 || isNaN(qt)) {\n      setErreur(\"Amount must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    if (currentPrice <= 0 || isNaN(currentPrice)) {\n      setErreur(\"Current Price must be greater than 0 !\");\n      setShowErr(true);\n      return;\n    }\n    addCoins(qt);\n    setQt(0);\n    setCurrentPrice(0);\n    setShowQt(false);\n    setShowErr(false);\n  };\n  return (\n    <>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === \"string\") {\n            setValue({\n              name: newValue,\n            });\n            addQuantity(newValue);\n          } else if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setValue({\n              name: newValue.inputValue,\n            });\n            addQuantity({ name: newValue.inputValue, symbol: \"\" });\n          } else {\n            setValue(newValue);\n            if (newValue) addQuantity(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const { inputValue } = params;\n          if (inputValue.length === 0) return [];\n          const filtered = options.filter(\n            (item) =>\n              item.name.toLowerCase().startsWith(inputValue) ||\n              item.symbol.toLowerCase().startsWith(inputValue)\n          );\n\n          // Suggest the creation of a new value\n          const isExisting = options.some(\n            (option) => inputValue === option.name\n          );\n          if (inputValue !== \"\" && !isExisting) {\n            filtered.push({\n              inputValue,\n              name: `Add \"${inputValue}\"`,\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        id=\"free-solo-with-text-demo\"\n        options={coins}\n        getOptionLabel={(option) => {\n          if (typeof option === \"string\") {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.name;\n        }}\n        renderOption={(props, option) => <li {...props}>{option.name}</li>}\n        sx={{ width: \"100%\" }}\n        freeSolo\n        renderInput={(params) => <TextField {...params} label=\"Assets\" />}\n      />\n      {showQt ? (\n        <div className={styles[\"div-flex\"]}>\n          <InputLabel htmlFor=\"component-helper\">Amount</InputLabel>\n\n          <Input\n            type=\"text\"\n            value={qt}\n            placeholder=\"Amount\"\n            onChange={handleQtChange}\n          />\n          <InputLabel htmlFor=\"component-helper\">Current price</InputLabel>\n\n          <Input\n            type=\"text\"\n            placeholder=\"Current price\"\n            value={currentPrice}\n            onChange={handleCpChange}\n          />\n\n          <Button variant=\"contained\" onClick={handelAfterAddQ}>\n            add coin\n          </Button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      \n      {selectedCoins.length  ? <AssetsTable coins={selectedCoins} /> : \"\"}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}